{"task_id": "MbppEval/2", "prompt": "def similar_elements(test_tup1, test_tup2):\n    '''\n    Write a function to find the shared elements from the given two lists.\n    '''\n", "entry_point": "similar_elements", "tests": ["set(similar_elements((3, 4, 5, 6),(5, 7, 4, 10)))", "set(similar_elements((1, 2, 3, 4),(5, 4, 3, 7)))", "set(similar_elements((11, 12, 14, 13),(17, 15, 14, 13)))"]}
{"task_id": "MbppEval/3", "prompt": "import math\ndef is_not_prime(n):\n    '''\n    Write a python function to identify non-prime numbers.\n    '''\n", "entry_point": "is_not_prime", "tests": ["is_not_prime(2)", "is_not_prime(10)", "is_not_prime(35)", "is_not_prime(37)"]}
{"task_id": "MbppEval/4", "prompt": "import heapq as hq\ndef heap_queue_largest(nums,n):\n    '''\n    Write a function to find the n largest integers from a given list of numbers, returned in descending order.\n    '''\n", "entry_point": "heap_queue_largest", "tests": ["heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)", "heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],2)", "heap_queue_largest( [25, 35, 22, 85, 14, 65, 75, 22, 58],5)"]}
{"task_id": "MbppEval/6", "prompt": "def is_Power_Of_Two (x): \n    '''\n    Write a python function to check whether the two numbers differ at one bit position only or not.\n    '''\n", "entry_point": "is_Power_Of_Two ", "tests": ["differ_At_One_Bit_Pos(13,9)", "differ_At_One_Bit_Pos(15,8)", "differ_At_One_Bit_Pos(2,4)", "differ_At_One_Bit_Pos(2, 3)", "differ_At_One_Bit_Pos(5, 1)", "differ_At_One_Bit_Pos(1, 5)"]}
{"task_id": "MbppEval/7", "prompt": "import re\ndef find_char_long(text):\n    '''\n    Write a function to find all words which are at least 4 characters long in a string.\n    '''\n", "entry_point": "find_char_long", "tests": ["set(find_char_long('Please move back to stream'))", "set(find_char_long('Jing Eco and Tech'))", "set(find_char_long('Jhingai wulu road Zone 3'))"]}
{"task_id": "MbppEval/8", "prompt": "def square_nums(nums):\n    '''\n    Write a function to find squares of individual elements in a list.\n    '''\n", "entry_point": "square_nums", "tests": ["square_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])", "square_nums([10,20,30])", "square_nums([12,15])"]}
{"task_id": "MbppEval/9", "prompt": "def find_Rotations(str): \n    '''\n    Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.\n    '''\n", "entry_point": "find_Rotations", "tests": ["find_Rotations(\"aaaa\")", "find_Rotations(\"ab\")", "find_Rotations(\"abc\")"]}
{"task_id": "MbppEval/11", "prompt": "def remove_Occ(s,ch): \n    '''\n    Write a python function to remove first and last occurrence of a given character from the string.\n    '''\n", "entry_point": "remove_Occ", "tests": ["remove_Occ(\"hello\",\"l\")", "remove_Occ(\"abcda\",\"a\")", "remove_Occ(\"PHP\",\"P\")"]}
{"task_id": "MbppEval/12", "prompt": "def sort_matrix(M):\n    '''\n    Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    '''\n", "entry_point": "sort_matrix", "tests": ["sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])", "sort_matrix([[1, 2, 3], [-2, 4, -5], [1, -1, 1]])", "sort_matrix([[5,8,9],[6,4,3],[2,1,4]])"]}
{"task_id": "MbppEval/14", "prompt": "def find_Volume(l,b,h) : \n    '''\n    Write a python function to find the volume of a triangular prism.\n    '''\n", "entry_point": "find_Volume", "tests": ["find_Volume(10,8,6)", "find_Volume(3,2,2)", "find_Volume(1,2,1)"]}
{"task_id": "MbppEval/16", "prompt": "import re\ndef text_lowercase_underscore(text):\n    '''\n    Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\n    '''\n", "entry_point": "text_lowercase_underscore", "tests": ["text_lowercase_underscore(\"aab_cbbbc\")", "text_lowercase_underscore(\"aab_Abbbc\")", "text_lowercase_underscore(\"Aaab_abbbc\")"]}
{"task_id": "MbppEval/17", "prompt": "def square_perimeter(a):\n    '''\n    Write a function that returns the perimeter of a square given its side length as input.\n    '''\n", "entry_point": "square_perimeter", "tests": ["square_perimeter(10)", "square_perimeter(5)", "square_perimeter(4)"]}
{"task_id": "MbppEval/18", "prompt": "NO_OF_CHARS = 256\ndef str_to_list(string): \n    '''\n    Write a function to remove characters from the first string which are present in the second string.\n    '''\n", "entry_point": "str_to_list", "tests": ["remove_dirty_chars(\"probasscurve\", \"pros\")", "remove_dirty_chars(\"digitalindia\", \"talent\")", "remove_dirty_chars(\"exoticmiles\", \"toxic\")"]}
{"task_id": "MbppEval/19", "prompt": "def test_duplicate(arraynums):\n    '''\n    Write a function to find whether a given array of integers contains any duplicate element.\n    '''\n", "entry_point": "test_duplicate", "tests": ["test_duplicate(([1,2,3,4,5]))", "test_duplicate(([1,2,3,4, 4]))", "test_duplicate([1,1,2,2,3,3,4,4,5])"]}
{"task_id": "MbppEval/20", "prompt": "def is_woodall(x): \n    '''\n    Write a function to check if the given number is woodball or not.\n    '''\n", "entry_point": "is_woodall", "tests": ["is_woodall(383)", "is_woodall(254)", "is_woodall(200)"]}
{"task_id": "MbppEval/56", "prompt": "def rev(num):    \n    '''\n    Write a python function to check if a given number is one less than twice its reverse.\n    '''\n", "entry_point": "rev", "tests": ["check(70)", "check(23)", "check(73)"]}
{"task_id": "MbppEval/57", "prompt": "def find_Max_Num(arr) : \n    '''\n    Write a python function to find the largest number that can be formed with the given list of digits.\n    '''\n", "entry_point": "find_Max_Num", "tests": ["find_Max_Num([1,2,3])", "find_Max_Num([4,5,6,1])", "find_Max_Num([1,2,3,9])"]}
{"task_id": "MbppEval/58", "prompt": "def opposite_Signs(x,y): \n    '''\n    Write a python function to check whether the given two integers have opposite sign or not.\n    '''\n", "entry_point": "opposite_Signs", "tests": ["opposite_Signs(1,-2)", "opposite_Signs(3,2)", "opposite_Signs(-10,-10)", "opposite_Signs(-2,2)"]}
{"task_id": "MbppEval/59", "prompt": "def is_octagonal(n): \n    '''\n    Write a function to find the nth octagonal number.\n    '''\n", "entry_point": "is_octagonal", "tests": ["is_octagonal(5)", "is_octagonal(10)", "is_octagonal(15)"]}
{"task_id": "MbppEval/61", "prompt": "from collections import defaultdict\ndef count_Substrings(s):\n    '''\n    Write a python function to count the number of substrings with the sum of digits equal to their length.\n    '''\n", "entry_point": "count_Substrings", "tests": ["count_Substrings('112112')", "count_Substrings('111')", "count_Substrings('1101112')"]}
{"task_id": "MbppEval/62", "prompt": "def smallest_num(xs):\n    '''\n    Write a python function to find smallest number in a list.\n    '''\n", "entry_point": "smallest_num", "tests": ["smallest_num([10, 20, 1, 45, 99])", "smallest_num([1, 2, 3])", "smallest_num([45, 46, 50, 60])"]}
{"task_id": "MbppEval/63", "prompt": "def max_difference(test_list):\n    '''\n    Write a function to find the maximum difference between available pairs in the given tuple list.\n    '''\n", "entry_point": "max_difference", "tests": ["max_difference([(3, 5), (1, 7), (10, 3), (1, 2)])", "max_difference([(4, 6), (2, 17), (9, 13), (11, 12)])", "max_difference([(12, 35), (21, 27), (13, 23), (41, 22)])"]}
{"task_id": "MbppEval/64", "prompt": "def subject_marks(subjectmarks):\n    '''\n    Write a function to sort a list of tuples using the second value of each tuple.\n    '''\n", "entry_point": "subject_marks", "tests": ["subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])", "subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])", "subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])"]}
{"task_id": "MbppEval/65", "prompt": "def recursive_list_sum(data_list):\n    '''\n    Write a function to flatten a list and sum all of its elements.\n    '''\n", "entry_point": "recursive_list_sum", "tests": ["recursive_list_sum(([1, 2, [3,4],[5,6]]))", "recursive_list_sum(([7, 10, [15,14],[19,41]]))", "recursive_list_sum(([10, 20, [30,40],[50,60]]))"]}
{"task_id": "MbppEval/66", "prompt": "def pos_count(list):\n    '''\n    Write a python function to count the number of positive numbers in a list.\n    '''\n", "entry_point": "pos_count", "tests": ["pos_count([1,-2,3,-4])", "pos_count([3,4,5,-1])", "pos_count([1,2,3,4])"]}
{"task_id": "MbppEval/67", "prompt": "def bell_number(n):   \n    '''\n    Write a function to find the number of ways to partition a set of Bell numbers.\n    '''\n", "entry_point": "bell_number", "tests": ["bell_number(2)", "bell_number(10)", "bell_number(56)"]}
{"task_id": "MbppEval/68", "prompt": "def is_Monotonic(A): \n    '''\n    Write a python function to check whether the given array is monotonic or not.\n    '''\n", "entry_point": "is_Monotonic", "tests": ["is_Monotonic([6, 5, 4, 4])", "is_Monotonic([1, 2, 2, 3])", "is_Monotonic([1, 3, 2])"]}
{"task_id": "MbppEval/69", "prompt": "def is_sublist(l, s):\n    '''\n    Write a function to check whether a list contains the given sublist or not.\n    '''\n", "entry_point": "is_sublist", "tests": ["is_sublist([2,4,3,5,7],[3,7])", "is_sublist([2,4,3,5,7],[4,3])", "is_sublist([2,4,3,5,7],[1,6])"]}
{"task_id": "MbppEval/70", "prompt": "def find_equal_tuple(Input):\n    '''\n    Write a function to find whether all the given tuples have equal length or not.\n    '''\n", "entry_point": "find_equal_tuple", "tests": ["get_equal([(11, 22, 33), (44, 55, 66)])", "get_equal([(1, 2, 3), (4, 5, 6, 7)])", "get_equal([(1, 2), (3, 4)])"]}
{"task_id": "MbppEval/71", "prompt": "def comb_sort(nums):\n    '''\n    Write a function to sort a list of elements.\n    '''\n", "entry_point": "comb_sort", "tests": ["comb_sort([5, 15, 37, 25, 79])", "comb_sort([41, 32, 15, 19, 22])", "comb_sort([99, 15, 13, 47])"]}
{"task_id": "MbppEval/72", "prompt": "def dif_Square(n): \n    '''\n    Write a python function to check whether the given number can be represented as the difference of two squares or not.\n    '''\n", "entry_point": "dif_Square", "tests": ["dif_Square(5)", "dif_Square(10)", "dif_Square(15)"]}
{"task_id": "MbppEval/74", "prompt": "def is_samepatterns(colors, patterns):    \n    '''\n    Write a function to check whether it follows the sequence given in the patterns array.\n    '''\n", "entry_point": "is_samepatterns", "tests": ["is_samepatterns([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])", "is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\",\"b\"])", "is_samepatterns([\"red\",\"green\",\"greenn\"], [\"a\",\"b\"])"]}
{"task_id": "MbppEval/75", "prompt": "def find_tuples(test_list, K):\n    '''\n    Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n    '''\n", "entry_point": "find_tuples", "tests": ["find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6)", "find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5)", "find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4)"]}
{"task_id": "MbppEval/77", "prompt": "def is_Diff(n): \n    '''\n    Write a python function to find whether a number is divisible by 11.\n    '''\n", "entry_point": "is_Diff", "tests": ["is_Diff (12345)", "is_Diff(1212112)", "is_Diff(1212)"]}
{"task_id": "MbppEval/79", "prompt": "def word_len(s): \n    '''\n    Write a python function to check whether the length of the word is odd or not.\n    '''\n", "entry_point": "word_len", "tests": ["word_len(\"Hadoop\")", "word_len(\"great\")", "word_len(\"structure\")"]}
{"task_id": "MbppEval/80", "prompt": "def tetrahedral_number(n): \n    '''\n    Write a function to find the nth tetrahedral number.\n    '''\n", "entry_point": "tetrahedral_number", "tests": ["tetrahedral_number(5)", "tetrahedral_number(6)", "tetrahedral_number(7)"]}
{"task_id": "MbppEval/82", "prompt": "import math\ndef volume_sphere(r):\n    '''\n    Write a function to find the volume of a sphere.\n    '''\n", "entry_point": "volume_sphere", "tests": ["math.isclose(volume_sphere(10), 4188.790204786391, rel_tol=0.001)", "math.isclose(volume_sphere(25), 65449.84694978735, rel_tol=0.001)", "math.isclose(volume_sphere(20), 33510.32163829113, rel_tol=0.001)"]}
{"task_id": "MbppEval/83", "prompt": "def get_Char(strr):  \n    '''\n    Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n    '''\n", "entry_point": "get_Char", "tests": ["get_Char(\"abc\")", "get_Char(\"gfg\")", "get_Char(\"ab\")"]}
{"task_id": "MbppEval/84", "prompt": "def sequence(n): \n    '''\n    Write a function to find the nth number in the newman conway sequence.\n    '''\n", "entry_point": "sequence", "tests": ["sequence(10)", "sequence(2)", "sequence(3)"]}
{"task_id": "MbppEval/85", "prompt": "import math\ndef surfacearea_sphere(r):\n    '''\n    Write a function to find the surface area of a sphere.\n    '''\n", "entry_point": "surfacearea_sphere", "tests": ["math.isclose(surfacearea_sphere(10), 1256.6370614359173, rel_tol=0.001)", "math.isclose(surfacearea_sphere(15), 2827.4333882308138, rel_tol=0.001)", "math.isclose(surfacearea_sphere(20), 5026.548245743669, rel_tol=0.001)"]}
{"task_id": "MbppEval/86", "prompt": "def centered_hexagonal_number(n):\n    '''\n    Write a function to find nth centered hexagonal number.\n    '''\n", "entry_point": "centered_hexagonal_number", "tests": ["centered_hexagonal_number(10)", "centered_hexagonal_number(2)", "centered_hexagonal_number(9)"]}
{"task_id": "MbppEval/87", "prompt": "import collections as ct\ndef merge_dictionaries_three(dict1,dict2, dict3):\n    '''\n    Write a function to merge three dictionaries into a single dictionary.\n    '''\n", "entry_point": "merge_dictionaries_three", "tests": ["merge_dictionaries_three({ \"R\": \"Red\", \"B\": \"Black\", \"P\": \"Pink\" }, { \"G\": \"Green\", \"W\": \"White\" },{ \"O\": \"Orange\", \"W\": \"White\", \"B\": \"Black\" })", "merge_dictionaries_three({ \"R\": \"Red\", \"B\": \"Black\", \"P\": \"Pink\" }, { \"G\": \"Green\", \"W\": \"White\" },{\"L\":\"lavender\",\"B\":\"Blue\"})", "merge_dictionaries_three({ \"R\": \"Red\", \"B\": \"Black\", \"P\": \"Pink\" },{\"L\":\"lavender\",\"B\":\"Blue\"},{ \"G\": \"Green\", \"W\": \"White\" })"]}
{"task_id": "MbppEval/88", "prompt": "import collections\ndef freq_count(list1):\n    '''\n    Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    '''\n", "entry_point": "freq_count", "tests": ["freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])", "freq_count([1,2,3,4,3,2,4,1,3,1,4])", "freq_count([5,6,7,4,9,10,4,5,6,7,9,5])"]}
{"task_id": "MbppEval/89", "prompt": "def closest_num(N):\n    '''\n    Write a function to find the closest smaller number than n.\n    '''\n", "entry_point": "closest_num", "tests": ["closest_num(11)", "closest_num(7)", "closest_num(12)"]}
{"task_id": "MbppEval/90", "prompt": "def len_log(list1):\n    '''\n    Write a python function to find the length of the longest word.\n    '''\n", "entry_point": "len_log", "tests": ["len_log([\"python\",\"PHP\",\"bigdata\"])", "len_log([\"a\",\"ab\",\"abc\"])", "len_log([\"small\",\"big\",\"tall\"])"]}
{"task_id": "MbppEval/91", "prompt": "def find_substring(str1, sub_str):\n    '''\n    Write a function to check if a string is present as a substring in a given list of string values.\n    '''\n", "entry_point": "find_substring", "tests": ["find_substring([\"red\", \"black\", \"white\", \"green\", \"orange\"],\"ack\")", "find_substring([\"red\", \"black\", \"white\", \"green\", \"orange\"],\"abc\")", "find_substring([\"red\", \"black\", \"white\", \"green\", \"orange\"],\"ange\")"]}
{"task_id": "MbppEval/92", "prompt": "def is_undulating(n): \n    '''\n    Write a function to check whether the given number is undulating or not.\n    '''\n", "entry_point": "is_undulating", "tests": ["is_undulating(1212121)", "is_undulating(1991)", "is_undulating(121)"]}
{"task_id": "MbppEval/93", "prompt": "def power(a,b):\n    '''\n    Write a function to calculate the value of 'a' to the power 'b'.\n    '''\n", "entry_point": "power", "tests": ["power(3,4)", "power(2,3)", "power(5,5)"]}
{"task_id": "MbppEval/94", "prompt": "from operator import itemgetter \ndef index_minimum(test_list):\n    '''\n    Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    '''\n", "entry_point": "index_minimum", "tests": ["index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)])", "index_minimum([('Yash', 185), ('Dawood', 125), ('Sanya', 175)])", "index_minimum([('Sai', 345), ('Salman', 145), ('Ayesha', 96)])"]}
{"task_id": "MbppEval/95", "prompt": "def Find_Min_Length(lst):  \n    '''\n    Write a python function to find the length of the smallest list in a list of lists.\n    '''\n", "entry_point": "Find_Min_Length", "tests": ["Find_Min_Length([[1],[1,2]])", "Find_Min_Length([[1,2],[1,2,3],[1,2,3,4]])", "Find_Min_Length([[3,3,3],[4,4,4,4]])"]}
{"task_id": "MbppEval/96", "prompt": "def divisor(n):\n    '''\n    Write a python function to find the number of divisors of a given integer.\n    '''\n", "entry_point": "divisor", "tests": ["divisor(15)", "divisor(12)", "divisor(9)"]}
{"task_id": "MbppEval/97", "prompt": "def frequency_lists(list1):\n    '''\n    Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n    '''\n", "entry_point": "frequency_lists", "tests": ["frequency_lists([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]])", "frequency_lists([[1,2,3,4],[5,6,7,8],[9,10,11,12]])", "frequency_lists([[20,30,40,17],[18,16,14,13],[10,20,30,40]])"]}
{"task_id": "MbppEval/98", "prompt": "def multiply_num(numbers):  \n    '''\n    Write a function to multiply all the numbers in a list and divide with the length of the list.\n    '''\n", "entry_point": "multiply_num", "tests": ["math.isclose(multiply_num((8, 2, 3, -1, 7)), -67.2, rel_tol=0.001)", "math.isclose(multiply_num((-10,-20,-30)), -2000.0, rel_tol=0.001)", "math.isclose(multiply_num((19,15,18)), 1710.0, rel_tol=0.001)"]}
{"task_id": "MbppEval/99", "prompt": "def decimal_to_binary(n): \n    '''\n    Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n    '''\n", "entry_point": "decimal_to_binary", "tests": ["decimal_to_binary(8)", "decimal_to_binary(18)", "decimal_to_binary(7)"]}
{"task_id": "MbppEval/100", "prompt": "import sys\ndef next_smallest_palindrome(num):\n    '''\n    Write a function to find the next smallest palindrome of a specified integer, returned as an integer.\n    '''\n", "entry_point": "next_smallest_palindrome", "tests": ["next_smallest_palindrome(99)", "next_smallest_palindrome(1221)", "next_smallest_palindrome(120)"]}
{"task_id": "MbppEval/101", "prompt": "def kth_element(arr, k):\n    '''\n    Write a function to find the kth element in the given array using 1-based indexing.\n    '''\n", "entry_point": "kth_element", "tests": ["kth_element([12,3,5,7,19], 2)", "kth_element([17,24,8,23], 3)", "kth_element([16,21,25,36,4], 4)"]}
{"task_id": "MbppEval/102", "prompt": "def snake_to_camel(word):\n    '''\n    Write a function to convert a snake case string to camel case string.\n    '''\n", "entry_point": "snake_to_camel", "tests": ["snake_to_camel('python_program')", "snake_to_camel('python_language')", "snake_to_camel('programming_language')"]}
{"task_id": "MbppEval/103", "prompt": "def eulerian_num(n, m): \n    '''\n    Write a function to find the Eulerian number a(n, m).\n    '''\n", "entry_point": "eulerian_num", "tests": ["eulerian_num(3, 1)", "eulerian_num(4, 1)", "eulerian_num(5, 3)"]}
{"task_id": "MbppEval/104", "prompt": "def sort_sublists(input_list):\n    '''\n    Write a function to sort each sublist of strings in a given list of lists.\n    '''\n", "entry_point": "sort_sublists", "tests": ["sort_sublists(([\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]))", "sort_sublists(([\" red \",\"green\" ],[\"blue \",\" black\"],[\" orange\",\"brown\"]))", "sort_sublists(([\"zilver\",\"gold\"], [\"magnesium\",\"aluminium\"], [\"steel\", \"bronze\"]))"]}
{"task_id": "MbppEval/105", "prompt": "def count(lst):   \n    '''\n    Write a python function to count true booleans in the given list.\n    '''\n", "entry_point": "count", "tests": ["count([True,False,True])", "count([False,False])", "count([True,True,True])"]}
{"task_id": "MbppEval/106", "prompt": "def add_lists(test_list, test_tup):\n    '''\n    Write a function to append the given list to the given tuples.\n    '''\n", "entry_point": "add_lists", "tests": ["add_lists([5, 6, 7], (9, 10))", "add_lists([6, 7, 8], (10, 11))", "add_lists([7, 8, 9], (11, 12))"]}
{"task_id": "MbppEval/108", "prompt": "import heapq\ndef merge_sorted_list(num1,num2,num3):\n    '''\n    Write a function to merge three lists into a single sorted list.\n    '''\n", "entry_point": "merge_sorted_list", "tests": ["merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])", "merge_sorted_list([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12])", "merge_sorted_list([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41])"]}
{"task_id": "MbppEval/109", "prompt": "def odd_Equivalent(s,n): \n    '''\n    Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n    '''\n", "entry_point": "odd_Equivalent", "tests": ["odd_Equivalent(\"011001\",6)", "odd_Equivalent(\"11011\",5)", "odd_Equivalent(\"1010\",4)"]}
{"task_id": "MbppEval/111", "prompt": "def common_in_nested_lists(nestedlist):\n    '''\n    Write a function to find the common elements in given nested lists.\n    '''\n", "entry_point": "common_in_nested_lists", "tests": ["set(common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]))", "set(common_in_nested_lists([[12, 5, 23, 25, 45], [7, 11, 5, 23, 28], [1, 5, 8, 18, 23, 16]]))", "set(common_in_nested_lists([[2, 3,4, 1], [4, 5], [6,4, 8],[4, 5], [6, 8,4]]))"]}
{"task_id": "MbppEval/113", "prompt": "def check_integer(text):\n    '''\n    Write a function to check if a string represents an integer or not.\n    '''\n", "entry_point": "check_integer", "tests": ["check_integer(\"python\")", "check_integer(\"1\")", "check_integer(\"12345\")"]}
{"task_id": "MbppEval/115", "prompt": "def empty_dit(list1):\n    '''\n    Write a function to check whether all dictionaries in a list are empty or not.\n    '''\n", "entry_point": "empty_dit", "tests": ["empty_dit([{},{},{}])", "empty_dit([{1,2},{},{}])", "empty_dit({})"]}
{"task_id": "MbppEval/116", "prompt": "def tuple_to_int(nums):\n    '''\n    Write a function to convert a given tuple of positive integers into a single integer.\n    '''\n", "entry_point": "tuple_to_int", "tests": ["tuple_to_int((1,2,3))", "tuple_to_int((4,5,6))", "tuple_to_int((5,6,7))"]}
{"task_id": "MbppEval/117", "prompt": "def list_to_float(test_list):\n    '''\n    Write a function to convert all possible convertible elements in a list of lists to floats.\n    '''\n", "entry_point": "list_to_float", "tests": ["list_to_float( [(\"3\", \"4\"), (\"1\", \"26.45\"), (\"7.32\", \"8\"), (\"4\", \"8\")] )", "list_to_float( [(\"4\", \"4\"), (\"2\", \"27\"), (\"4.12\", \"9\"), (\"7\", \"11\")] )", "list_to_float( [(\"6\", \"78\"), (\"5\", \"26.45\"), (\"1.33\", \"4\"), (\"82\", \"13\")] )"]}
{"task_id": "MbppEval/118", "prompt": "def string_to_list(string): \n    '''\n    Write a function to convert a string to a list of strings split on the space character.\n    '''\n", "entry_point": "string_to_list", "tests": ["string_to_list(\"python programming\")", "string_to_list(\"lists tuples strings\")", "string_to_list(\"write a program\")"]}
{"task_id": "MbppEval/119", "prompt": "def search(arr):\n    '''\n    Write a python function to find the element that appears only once in a sorted array.\n    '''\n", "entry_point": "search", "tests": ["search([1,1,2,2,3])", "search([1,1,3,3,4,4,5,5,7,7,8])", "search([1,2,2,3,3,4,4])"]}
{"task_id": "MbppEval/120", "prompt": "def max_product_tuple(list1):\n    '''\n    Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    '''\n", "entry_point": "max_product_tuple", "tests": ["max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )", "max_product_tuple([(10,20), (15,2), (5,10)] )", "max_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )"]}
{"task_id": "MbppEval/123", "prompt": "def amicable_numbers_sum(limit):\n    '''\n    Write a function to sum all amicable numbers from 1 to a specified number.\n    '''\n", "entry_point": "amicable_numbers_sum", "tests": ["amicable_numbers_sum(999)", "amicable_numbers_sum(9999)", "amicable_numbers_sum(99)"]}
{"task_id": "MbppEval/124", "prompt": "import cmath\ndef angle_complex(a,b):\n    '''\n    Write a function to get the angle of a complex number.\n    '''\n", "entry_point": "angle_complex", "tests": ["math.isclose(angle_complex(0,1j), 1.5707963267948966, rel_tol=0.001)", "math.isclose(angle_complex(2,1j), 0.4636476090008061, rel_tol=0.001)", "math.isclose(angle_complex(0,2j), 1.5707963267948966, rel_tol=0.001)"]}
{"task_id": "MbppEval/125", "prompt": "def find_length(string): \n    '''\n    Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    '''\n", "entry_point": "find_length", "tests": ["find_length(\"11000010001\")", "find_length(\"10111\")", "find_length(\"11011101100101\")"]}
{"task_id": "MbppEval/126", "prompt": "def sum(a,b): \n    '''\n    Write a python function to find the sum of common divisors of two given numbers.\n    '''\n", "entry_point": "sum", "tests": ["sum(10,15)", "sum(100,150)", "sum(4,6)"]}
{"task_id": "MbppEval/127", "prompt": "def multiply_int(x, y):\n    '''\n    Write a function to multiply two integers.\n    '''\n", "entry_point": "multiply_int", "tests": ["multiply_int(10,20)", "multiply_int(5,10)", "multiply_int(4,8)"]}
{"task_id": "MbppEval/128", "prompt": "def long_words(n, str):\n    '''\n    Write a function to find words that are longer than n characters from a given list of words.\n    '''\n", "entry_point": "long_words", "tests": ["long_words(3,\"python is a programming language\")", "long_words(2,\"writing a program\")", "long_words(5,\"sorting list\")"]}
{"task_id": "MbppEval/129", "prompt": "def magic_square_test(my_matrix):\n    '''\n    Write a function to calculate whether the matrix is a magic square.\n    '''\n", "entry_point": "magic_square_test", "tests": ["magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])", "magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])", "magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])"]}
{"task_id": "MbppEval/130", "prompt": "from collections import defaultdict\ndef max_occurrences(nums):\n    '''\n    Write a function to find the item with maximum frequency in a given list.\n    '''\n", "entry_point": "max_occurrences", "tests": ["max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])", "max_occurrences([2,3,8,4,7,9,8,7,9,15,14,10,12,13,16,18])", "max_occurrences([10,20,20,30,40,90,80,50,30,20,50,10])"]}
{"task_id": "MbppEval/131", "prompt": "def reverse_vowels(str1):\n    '''\n    Write a python function to reverse only the vowels of a given string (where y is not a vowel).\n    '''\n", "entry_point": "reverse_vowels", "tests": ["reverse_vowels(\"Python\")", "reverse_vowels(\"USA\")", "reverse_vowels(\"ab\")"]}
{"task_id": "MbppEval/132", "prompt": "def tup_string(tup1):\n    '''\n    Write a function to convert a tuple to a string.\n    '''\n", "entry_point": "tup_string", "tests": ["tup_string(('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's'))", "tup_string(('p','y','t','h','o','n'))", "tup_string(('p','r','o','g','r','a','m'))"]}
{"task_id": "MbppEval/133", "prompt": "def sum_negativenum(nums):\n    '''\n    Write a function to calculate the sum of the negative numbers of a given list of numbers.\n    '''\n", "entry_point": "sum_negativenum", "tests": ["sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17])", "sum_negativenum([10,15,-14,13,-18,12,-20])", "sum_negativenum([19, -65, 57, 39, 152,-639, 121, 44, 90, -190])"]}
{"task_id": "MbppEval/135", "prompt": "def hexagonal_num(n): \n    '''\n    Write a function to find the nth hexagonal number.\n    '''\n", "entry_point": "hexagonal_num", "tests": ["hexagonal_num(10)", "hexagonal_num(5)", "hexagonal_num(7)"]}
{"task_id": "MbppEval/137", "prompt": "from array import array\ndef zero_count(nums):\n    '''\n    Write a function to find the ratio of zeroes to non-zeroes in an array of integers.\n    '''\n", "entry_point": "zero_count", "tests": ["math.isclose(zero_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]), 0.181818, rel_tol=0.001)", "math.isclose(zero_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]), 0.00, rel_tol=0.001)", "math.isclose(zero_count([2, 4, -6, -9, 11, -12, 14, -5, 17]), 0.00, rel_tol=0.001)"]}
{"task_id": "MbppEval/138", "prompt": "def is_Sum_Of_Powers_Of_Two(n): \n    '''\n    Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n    '''\n", "entry_point": "is_Sum_Of_Powers_Of_Two", "tests": ["is_Sum_Of_Powers_Of_Two(10)", "is_Sum_Of_Powers_Of_Two(7)", "is_Sum_Of_Powers_Of_Two(14)"]}
{"task_id": "MbppEval/139", "prompt": "def circle_circumference(r):\n    '''\n    Write a function to find the circumference of a circle.\n    '''\n", "entry_point": "circle_circumference", "tests": ["math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)", "math.isclose(circle_circumference(5), 31.415000000000003, rel_tol=0.001)", "math.isclose(circle_circumference(4), 25.132, rel_tol=0.001)"]}
{"task_id": "MbppEval/140", "prompt": "def extract_singly(test_list):\n    '''\n    Write a function to flatten the list of lists into a single set of numbers.\n    '''\n", "entry_point": "extract_singly", "tests": ["set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)]))", "set(extract_singly([(1, 2, 3), (4, 2, 3), (7, 8)]))", "set(extract_singly([(7, 8, 9), (10, 11, 12), (10, 11)]))"]}
{"task_id": "MbppEval/141", "prompt": "def pancake_sort(nums):\n    '''\n    Write a function to sort a list of elements.\n    '''\n", "entry_point": "pancake_sort", "tests": ["pancake_sort([15, 79, 25, 38, 69])", "pancake_sort([98, 12, 54, 36, 85])", "pancake_sort([41, 42, 32, 12, 23])"]}
{"task_id": "MbppEval/142", "prompt": "def count_samepair(list1,list2,list3):\n    '''\n    Write a function to count number items that are identical in the same position of three given lists.\n    '''\n", "entry_point": "count_samepair", "tests": ["count_samepair([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,9],[2,1,3,1,2,6,7,9])", "count_samepair([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,8],[2,1,3,1,2,6,7,8])", "count_samepair([1,2,3,4,2,6,7,8],[2,2,3,1,2,6,7,8],[2,1,3,1,2,6,7,8])"]}
{"task_id": "MbppEval/143", "prompt": "def find_lists(Input): \n    '''\n    Write a function to find number of lists present in the given tuple.\n    '''\n", "entry_point": "find_lists", "tests": ["find_lists(([1, 2, 3, 4], [5, 6, 7, 8]))", "find_lists(([1, 2], [3, 4], [5, 6]))", "find_lists(([9, 8, 7, 6, 5, 4, 3, 2, 1]))"]}
{"task_id": "MbppEval/145", "prompt": "def max_Abs_Diff(arr): \n    '''\n    Write a python function to find the maximum difference between any two elements in a given array.\n    '''\n", "entry_point": "max_Abs_Diff", "tests": ["max_Abs_Diff((2,1,5,3))", "max_Abs_Diff((9,3,2,5,1))", "max_Abs_Diff((3,2,1))"]}
{"task_id": "MbppEval/160", "prompt": "def find_solution(a, b, n):\n    '''\n    Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    '''\n", "entry_point": "find_solution", "tests": ["find_solution(2, 3, 7)", "find_solution(4, 2, 7)", "find_solution(1, 13, 17)"]}
{"task_id": "MbppEval/161", "prompt": "def remove_elements(list1, list2):\n    '''\n    Write a function to remove all elements from a given list present in another list.\n    '''\n", "entry_point": "remove_elements", "tests": ["remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8])", "remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 3, 5, 7])", "remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [5, 7])"]}
{"task_id": "MbppEval/162", "prompt": "def sum_series(n):\n    '''\n    Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    '''\n", "entry_point": "sum_series", "tests": ["sum_series(6)", "sum_series(10)", "sum_series(9)"]}
{"task_id": "MbppEval/163", "prompt": "from math import tan, pi\ndef area_polygon(s, l):\n    '''\n    Write a function to calculate the area of a regular polygon given the length and number of its sides.\n    '''\n", "entry_point": "area_polygon", "tests": ["math.isclose(area_polygon(4, 20), 400., rel_tol=0.001)", "math.isclose(area_polygon(10, 15), 1731.197, rel_tol=0.001)", "math.isclose(area_polygon(9, 7), 302.909, rel_tol=0.001)"]}
{"task_id": "MbppEval/164", "prompt": "import math \ndef div_sum(n): \n    '''\n    Write a function to determine if the sum of the divisors of two integers are the same.\n    '''\n", "entry_point": "div_sum", "tests": ["are_equivalent(36, 57)", "are_equivalent(2, 4)", "are_equivalent(23, 47)"]}
{"task_id": "MbppEval/165", "prompt": "def count_char_position(str1): \n    '''\n    Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\n    '''\n", "entry_point": "count_char_position", "tests": ["count_char_position(\"xbcefg\")", "count_char_position(\"ABcED\")", "count_char_position(\"AbgdeF\")"]}
{"task_id": "MbppEval/166", "prompt": "def find_even_pair(A): \n    '''\n    Write a function that counts the number of pairs of integers in a list that xor to an even number.\n    '''\n", "entry_point": "find_even_pair", "tests": ["find_even_pair([5, 4, 7, 2, 1])", "find_even_pair([7, 2, 8, 1, 0, 5, 11])", "find_even_pair([1, 2, 3])"]}
{"task_id": "MbppEval/167", "prompt": "def next_power_of_2(n): \n    '''\n    Write a python function to find the smallest power of 2 greater than or equal to n.\n    '''\n", "entry_point": "next_power_of_2", "tests": ["next_power_of_2(0)", "next_power_of_2(5)", "next_power_of_2(17)"]}
{"task_id": "MbppEval/168", "prompt": "def frequency(a,x): \n    '''\n    Write a function to count the number of occurrences of a number in a given list.\n    '''\n", "entry_point": "frequency", "tests": ["frequency([1,2,3], 4)", "frequency([1,2,2,3,3,3,4], 3)", "frequency([0,1,2,3,1,2], 1)"]}
{"task_id": "MbppEval/170", "prompt": "def sum_range_list(list1, m, n):                                                                                                                                                                                                \n    '''\n    Write a function to find the sum of numbers in a list within a range specified by two indices.\n    '''\n", "entry_point": "sum_range_list", "tests": ["sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 8, 10)", "sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 5, 7)", "sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 7, 10)"]}
{"task_id": "MbppEval/171", "prompt": "import math\ndef perimeter_pentagon(a):\n    '''\n    Write a function to find the perimeter of a regular pentagon from the length of its sides.\n    '''\n", "entry_point": "perimeter_pentagon", "tests": ["perimeter_pentagon(5)", "perimeter_pentagon(10)", "perimeter_pentagon(15)"]}
{"task_id": "MbppEval/172", "prompt": "def count_occurance(s):\n    '''\n    Write a function to count the number of occurence of the string 'std' in a given string.\n    '''\n", "entry_point": "count_occurance", "tests": ["count_occurance(\"letstdlenstdporstd\")", "count_occurance(\"truststdsolensporsd\")", "count_occurance(\"makestdsostdworthit\")", "count_occurance(\"stds\")", "count_occurance(\"\")"]}
{"task_id": "MbppEval/222", "prompt": "def check_type(test_tuple):\n    '''\n    Write a function to check if all the elements in tuple have same data type or not.\n    '''\n", "entry_point": "check_type", "tests": ["check_type((5, 6, 7, 3, 5, 6) )", "check_type((1, 2, \"4\") )", "check_type((3, 2, 1, 4, 5) )"]}
{"task_id": "MbppEval/223", "prompt": "def is_majority(arr, n, x):\n    '''\n    Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n    '''\n", "entry_point": "is_majority", "tests": ["is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3)", "is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4)", "is_majority([1, 1, 1, 2, 2], 5, 1)", "is_majority([1, 1, 2, 2], 5, 1)"]}
{"task_id": "MbppEval/224", "prompt": "def count_Set_Bits(n): \n    '''\n    Write a python function to count the number of set bits (binary digits with value 1) in a given number.\n    '''\n", "entry_point": "count_Set_Bits", "tests": ["count_Set_Bits(2)", "count_Set_Bits(4)", "count_Set_Bits(6)"]}
{"task_id": "MbppEval/226", "prompt": "def odd_values_string(str):\n    '''\n    Write a python function to remove the characters which have odd index values of a given string.\n    '''\n", "entry_point": "odd_values_string", "tests": ["odd_values_string('abcdef')", "odd_values_string('python')", "odd_values_string('data')", "odd_values_string('lambs')"]}
{"task_id": "MbppEval/227", "prompt": "def min_of_three(a,b,c): \n    '''\n    Write a function to find minimum of three numbers.\n    '''\n", "entry_point": "min_of_three", "tests": ["min_of_three(10,20,0)", "min_of_three(19,15,18)", "min_of_three(-10,-20,-30)"]}
{"task_id": "MbppEval/228", "prompt": "def all_Bits_Set_In_The_Given_Range(n,l,r):  \n    '''\n    Write a python function to check whether all the bits are unset in the given range or not.\n    '''\n", "entry_point": "all_Bits_Set_In_The_Given_Range", "tests": ["all_Bits_Set_In_The_Given_Range(4,1,2)", "all_Bits_Set_In_The_Given_Range(17,2,4)", "all_Bits_Set_In_The_Given_Range(39,4,6)"]}
{"task_id": "MbppEval/229", "prompt": "def re_arrange_array(arr, n):\n    '''\n    Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\n    '''\n", "entry_point": "re_arrange_array", "tests": ["re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9)", "re_arrange_array([12, -14, -26, 13, 15], 5)", "re_arrange_array([10, 24, 36, -42, -39, -78, 85], 7)"]}
{"task_id": "MbppEval/230", "prompt": "def replace_blank(str1,char):\n    '''\n    Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n    '''\n", "entry_point": "replace_blank", "tests": ["replace_blank(\"hello people\",'@')", "replace_blank(\"python program language\",'$')", "replace_blank(\"blank space\",\"-\")"]}
{"task_id": "MbppEval/232", "prompt": "import heapq\ndef larg_nnum(list1,n):\n    '''\n    Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.\n    '''\n", "entry_point": "larg_nnum", "tests": ["set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))", "set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],5))", "set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],3))"]}
{"task_id": "MbppEval/233", "prompt": "def lateralsuface_cylinder(r,h):\n    '''\n    Write a function to find the lateral surface area of a cylinder.\n    '''\n", "entry_point": "lateralsuface_cylinder", "tests": ["math.isclose(lateralsuface_cylinder(10,5), 314.15000000000003, rel_tol=0.001)", "math.isclose(lateralsuface_cylinder(4,5), 125.66000000000001, rel_tol=0.001)", "math.isclose(lateralsuface_cylinder(4,10), 251.32000000000002, rel_tol=0.001)"]}
{"task_id": "MbppEval/234", "prompt": "def volume_cube(l):\n    '''\n    Write a function to find the volume of a cube given its side length.\n    '''\n", "entry_point": "volume_cube", "tests": ["volume_cube(3)", "volume_cube(2)", "volume_cube(5)"]}
{"task_id": "MbppEval/235", "prompt": "def even_bit_set_number(n): \n    '''\n    Write a python function to set all even bits of a given number.\n    '''\n", "entry_point": "even_bit_set_number", "tests": ["even_bit_set_number(10)", "even_bit_set_number(20)", "even_bit_set_number(30)"]}
{"task_id": "MbppEval/237", "prompt": "from collections import Counter \ndef check_occurences(test_list):\n    '''\n    Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.\n    '''\n", "entry_point": "check_occurences", "tests": ["check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] )", "check_occurences([(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)] )", "check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] )"]}
{"task_id": "MbppEval/238", "prompt": "def number_of_substrings(str): \n    '''\n    Write a python function to count the number of non-empty substrings of a given string.\n    '''\n", "entry_point": "number_of_substrings", "tests": ["number_of_substrings(\"abc\")", "number_of_substrings(\"abcd\")", "number_of_substrings(\"abcde\")"]}
{"task_id": "MbppEval/239", "prompt": "def get_total_number_of_sequences(m,n): \n    '''\n    Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n    '''\n", "entry_point": "get_total_number_of_sequences", "tests": ["get_total_number_of_sequences(10, 4)", "get_total_number_of_sequences(5, 2)", "get_total_number_of_sequences(16, 3)"]}
{"task_id": "MbppEval/240", "prompt": "def replace_list(list1,list2):\n    '''\n    Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.\n    '''\n", "entry_point": "replace_list", "tests": ["replace_list([1, 3, 5, 7, 9, 10],[2, 4, 6, 8])", "replace_list([1,2,3,4,5],[5,6,7,8])", "replace_list([\"red\",\"blue\",\"green\"],[\"yellow\"])"]}
{"task_id": "MbppEval/242", "prompt": "def count_charac(str1):\n    '''\n    Write a function to count the total number of characters in a string.\n    '''\n", "entry_point": "count_charac", "tests": ["count_charac(\"python programming\")", "count_charac(\"language\")", "count_charac(\"words\")"]}
{"task_id": "MbppEval/244", "prompt": "import math  \ndef next_Perfect_Square(N): \n    '''\n    Write a python function to find the next perfect square greater than a given number.\n    '''\n", "entry_point": "next_Perfect_Square", "tests": ["next_Perfect_Square(35)", "next_Perfect_Square(6)", "next_Perfect_Square(9)"]}
{"task_id": "MbppEval/245", "prompt": "def max_sum(arr): \n    '''\n    Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\n    '''\n", "entry_point": "max_sum", "tests": ["max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9])", "max_sum([80, 60, 30, 40, 20, 10])", "max_sum([2, 3 ,14, 16, 21, 23, 29, 30])"]}
{"task_id": "MbppEval/246", "prompt": "def babylonian_squareroot(number):\n    '''\n    Write a function for computing square roots using the babylonian method.\n    '''\n", "entry_point": "babylonian_squareroot", "tests": ["math.isclose(babylonian_squareroot(10), 3.162277660168379, rel_tol=0.001)", "math.isclose(babylonian_squareroot(2), 1.414213562373095, rel_tol=0.001)", "math.isclose(babylonian_squareroot(9), 3.0, rel_tol=0.001)"]}
{"task_id": "MbppEval/247", "prompt": "def lps(str): \n    '''\n    Write a function to find the length of the longest palindromic subsequence in the given string.\n    '''\n", "entry_point": "lps", "tests": ["lps(\"TENS FOR TENS\")", "lps(\"CARDIO FOR CARDS\")", "lps(\"PART OF THE JOURNEY IS PART\")"]}
{"task_id": "MbppEval/248", "prompt": "def harmonic_sum(n):\n    '''\n    Write a function that takes in an integer n and calculates the harmonic sum of n-1.\n    '''\n", "entry_point": "harmonic_sum", "tests": ["math.isclose(harmonic_sum(7), 2.5928571428571425, rel_tol=0.001)", "math.isclose(harmonic_sum(4), 2.083333333333333, rel_tol=0.001)", "math.isclose(harmonic_sum(19), 3.547739657143682, rel_tol=0.001)"]}
{"task_id": "MbppEval/249", "prompt": "def intersection_array(array_nums1,array_nums2):\n    '''\n    Write a function to find the intersection of two arrays.\n    '''\n", "entry_point": "intersection_array", "tests": ["intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[1, 2, 4, 8, 9])", "intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[3,5,7,9])", "intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[10,20,30,40])"]}
{"task_id": "MbppEval/250", "prompt": "def count_X(tup, x): \n    '''\n    Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    '''\n", "entry_point": "count_X", "tests": ["count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),4)", "count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),10)", "count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),8)"]}
{"task_id": "MbppEval/251", "prompt": "def insert_element(list,element):\n    '''\n    Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.\n    '''\n", "entry_point": "insert_element", "tests": ["insert_element(['Red', 'Green', 'Black'] ,'c')", "insert_element(['python', 'java'] ,'program')", "insert_element(['happy', 'sad'] ,'laugh')"]}
{"task_id": "MbppEval/252", "prompt": "import cmath  \ndef convert(numbers):    \n    '''\n    Write a python function to convert complex numbers to polar coordinates.\n    '''\n", "entry_point": "convert", "tests": ["convert(1)", "convert(4)", "convert(5)"]}
{"task_id": "MbppEval/253", "prompt": "def count_integer(list1):\n    '''\n    Write a python function that returns the number of integer elements in a given list.\n    '''\n", "entry_point": "count_integer", "tests": ["count_integer([1,2,'abc',1.2])", "count_integer([1,2,3])", "count_integer([1,1.2,4,5.1])"]}
{"task_id": "MbppEval/255", "prompt": "from itertools import combinations_with_replacement \ndef combinations_colors(l, n):\n    '''\n    Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.\n    '''\n", "entry_point": "combinations_colors", "tests": ["combinations_colors( [\"Red\",\"Green\",\"Blue\"],1)", "combinations_colors( [\"Red\",\"Green\",\"Blue\"],2)", "combinations_colors( [\"Red\",\"Green\",\"Blue\"],3)"]}
{"task_id": "MbppEval/256", "prompt": "def count_Primes_nums(n):\n    '''\n    Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.\n    '''\n", "entry_point": "count_Primes_nums", "tests": ["count_Primes_nums(5)", "count_Primes_nums(10)", "count_Primes_nums(100)"]}
{"task_id": "MbppEval/257", "prompt": "def swap_numbers(a,b):\n    '''\n    Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\n    '''\n", "entry_point": "swap_numbers", "tests": ["swap_numbers(10,20)", "swap_numbers(15,17)", "swap_numbers(100,200)"]}
{"task_id": "MbppEval/259", "prompt": "def maximize_elements(test_tup1, test_tup2):\n    '''\n    Write a function to maximize the given two tuples.\n    '''\n", "entry_point": "maximize_elements", "tests": ["maximize_elements(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3)))", "maximize_elements(((2, 4), (5, 6), (3, 10), (2, 11)), ((7, 8), (4, 10), (2, 2), (8, 4)))", "maximize_elements(((3, 5), (6, 7), (4, 11), (3, 12)), ((8, 9), (5, 11), (3, 3), (9, 5)))"]}
{"task_id": "MbppEval/260", "prompt": "def newman_prime(n): \n    '''\n    Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    '''\n", "entry_point": "newman_prime", "tests": ["newman_prime(3)", "newman_prime(4)", "newman_prime(5)"]}
{"task_id": "MbppEval/261", "prompt": "def division_elements(test_tup1, test_tup2):\n    '''\n    Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    '''\n", "entry_point": "division_elements", "tests": ["division_elements((10, 4, 6, 9),(5, 2, 3, 3))", "division_elements((12, 6, 8, 16),(6, 3, 4, 4))", "division_elements((20, 14, 36, 18),(5, 7, 6, 9))"]}
{"task_id": "MbppEval/262", "prompt": "def split_two_parts(list1, L):\n    '''\n    Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    '''\n", "entry_point": "split_two_parts", "tests": ["split_two_parts([1,1,2,3,4,4,5,1],3)", "split_two_parts(['a', 'b', 'c', 'd'],2)", "split_two_parts(['p', 'y', 't', 'h', 'o', 'n'],4)"]}
{"task_id": "MbppEval/264", "prompt": "def dog_age(h_age):\n    '''\n    Write a function to calculate a dog's age in dog's years.\n    '''\n", "entry_point": "dog_age", "tests": ["dog_age(12)", "dog_age(15)", "dog_age(24)"]}
{"task_id": "MbppEval/265", "prompt": "def list_split(S, step):\n    '''\n    Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n    '''\n", "entry_point": "list_split", "tests": ["list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)", "list_split([1,2,3,4,5,6,7,8,9,10,11,12,13,14],3)", "list_split(['python','java','C','C++','DBMS','SQL'],2)"]}
{"task_id": "MbppEval/266", "prompt": "def lateralsurface_cube(l):\n    '''\n    Write a function to find the lateral surface area of a cube given its side length.\n    '''\n", "entry_point": "lateralsurface_cube", "tests": ["lateralsurface_cube(5)", "lateralsurface_cube(9)", "lateralsurface_cube(10)"]}
{"task_id": "MbppEval/267", "prompt": "def square_Sum(n):  \n    '''\n    Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\n    '''\n", "entry_point": "square_Sum", "tests": ["square_Sum(2)", "square_Sum(3)", "square_Sum(4)"]}
{"task_id": "MbppEval/268", "prompt": "def find_star_num(n): \n    '''\n    Write a function to find the n'th star number.\n    '''\n", "entry_point": "find_star_num", "tests": ["find_star_num(3)", "find_star_num(4)", "find_star_num(5)"]}
{"task_id": "MbppEval/269", "prompt": "def ascii_value(k):\n    '''\n    Write a function to find the ascii value of a character.\n    '''\n", "entry_point": "ascii_value", "tests": ["ascii_value('A')", "ascii_value('R')", "ascii_value('S')"]}
{"task_id": "MbppEval/270", "prompt": "def sum_even_and_even_index(arr):  \n    '''\n    Write a python function to find the sum of even numbers at even positions of a list.\n    '''\n", "entry_point": "sum_even_and_even_index", "tests": ["sum_even_and_even_index([5, 6, 12, 1, 18, 8])", "sum_even_and_even_index([3, 20, 17, 9, 2, 10, 18, 13, 6, 18])", "sum_even_and_even_index([5, 6, 12, 1])"]}
{"task_id": "MbppEval/271", "prompt": "def even_Power_Sum(n): \n    '''\n    Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\n    '''\n", "entry_point": "even_Power_Sum", "tests": ["even_Power_Sum(2)", "even_Power_Sum(3)", "even_Power_Sum(1)"]}
{"task_id": "MbppEval/272", "prompt": "def rear_extract(test_list):\n    '''\n    Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.\n    '''\n", "entry_point": "rear_extract", "tests": ["rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)])", "rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)])", "rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)])"]}
{"task_id": "MbppEval/273", "prompt": "def substract_elements(test_tup1, test_tup2):\n    '''\n    Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\n    '''\n", "entry_point": "substract_elements", "tests": ["substract_elements((10, 4, 5), (2, 5, 18))", "substract_elements((11, 2, 3), (24, 45 ,16))", "substract_elements((7, 18, 9), (10, 11, 12))"]}
{"task_id": "MbppEval/274", "prompt": "import math  \ndef even_binomial_Coeff_Sum( n): \n    '''\n    Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.\n    '''\n", "entry_point": "even_binomial_Coeff_Sum", "tests": ["even_binomial_Coeff_Sum(4)", "even_binomial_Coeff_Sum(6)", "even_binomial_Coeff_Sum(2)"]}
{"task_id": "MbppEval/276", "prompt": "def volume_cylinder(r,h):\n    '''\n    Write a function that takes in the radius and height of a cylinder and returns the the volume.\n    '''\n", "entry_point": "volume_cylinder", "tests": ["math.isclose(volume_cylinder(10,5), 1570.7500000000002, rel_tol=0.001)", "math.isclose(volume_cylinder(4,5), 251.32000000000002, rel_tol=0.001)", "math.isclose(volume_cylinder(4,10), 502.64000000000004, rel_tol=0.001)"]}
{"task_id": "MbppEval/277", "prompt": "def dict_filter(dict,n):\n    '''\n    Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\n    '''\n", "entry_point": "dict_filter", "tests": ["dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},170)", "dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},180)", "dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},190)"]}
{"task_id": "MbppEval/278", "prompt": "def count_first_elements(test_tup):\n    '''\n    Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    '''\n", "entry_point": "count_first_elements", "tests": ["count_first_elements((1, 5, 7, (4, 6), 10) )", "count_first_elements((2, 9, (5, 7), 11) )", "count_first_elements((11, 15, 5, 8, (2, 3), 8) )"]}
{"task_id": "MbppEval/279", "prompt": "def is_num_decagonal(n): \n    '''\n    Write a function to find the nth decagonal number.\n    '''\n", "entry_point": "is_num_decagonal", "tests": ["is_num_decagonal(3)", "is_num_decagonal(7)", "is_num_decagonal(10)"]}
{"task_id": "MbppEval/280", "prompt": "def sequential_search(dlist, item):\n    '''\n    Write a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\n    '''\n", "entry_point": "sequential_search", "tests": ["sequential_search([11,23,58,31,56,77,43,12,65,19],31)", "sequential_search([12, 32, 45, 62, 35, 47, 44, 61],61)", "sequential_search([9, 10, 17, 19, 22, 39, 48, 56],48)"]}
{"task_id": "MbppEval/281", "prompt": "def all_unique(test_list):\n    '''\n    Write a python function to check if the elements of a given list are unique or not.\n    '''\n", "entry_point": "all_unique", "tests": ["all_unique([1,2,3])", "all_unique([1,2,1,2])", "all_unique([1,2,3,4,5])"]}
{"task_id": "MbppEval/282", "prompt": "def sub_list(nums1,nums2):\n    '''\n    Write a function to subtract two lists element-wise.\n    '''\n", "entry_point": "sub_list", "tests": ["sub_list([1, 2, 3],[4,5,6])", "sub_list([1,2],[3,4])", "sub_list([90,120],[50,70])"]}
{"task_id": "MbppEval/283", "prompt": "def validate(n): \n    '''\n    Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    '''\n", "entry_point": "validate", "tests": ["validate(1234)", "validate(51241)", "validate(321)"]}
{"task_id": "MbppEval/284", "prompt": "def check_element(list,element):\n    '''\n    Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n    '''\n", "entry_point": "check_element", "tests": ["check_element([\"green\", \"orange\", \"black\", \"white\"],'blue')", "check_element([1,2,3,4],7)", "check_element([\"green\", \"green\", \"green\", \"green\"],'green')"]}
{"task_id": "MbppEval/285", "prompt": "import re\ndef text_match_two_three(text):\n    '''\n    Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n    '''\n", "entry_point": "text_match_two_three", "tests": ["text_match_two_three(\"ac\")", "text_match_two_three(\"dc\")", "text_match_two_three(\"abbbba\")"]}
{"task_id": "MbppEval/286", "prompt": "def max_sub_array_sum_repeated(a, n, k): \n    '''\n    Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\n    '''\n", "entry_point": "max_sub_array_sum_repeated", "tests": ["max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3)", "max_sub_array_sum_repeated([-1, 10, 20], 3, 2)", "max_sub_array_sum_repeated([-1, -2, -3], 3, 3)"]}
{"task_id": "MbppEval/287", "prompt": "def square_Sum(n):  \n    '''\n    Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\n    '''\n", "entry_point": "square_Sum", "tests": ["square_Sum(2)", "square_Sum(3)", "square_Sum(4)"]}
{"task_id": "MbppEval/290", "prompt": "def max_length(list1):\n    '''\n    Write a function to find the list of maximum length in a list of lists.\n    '''\n", "entry_point": "max_length", "tests": ["max_length([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])", "max_length([[1], [5, 7], [10, 12, 14,15]])", "max_length([[5], [15,20,25]])"]}
{"task_id": "MbppEval/291", "prompt": "def count_no_of_ways(n, k): \n    '''\n    Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    '''\n", "entry_point": "count_no_of_ways", "tests": ["count_no_of_ways(2, 4)", "count_no_of_ways(3, 2)", "count_no_of_ways(4, 4)"]}
{"task_id": "MbppEval/292", "prompt": "def find(n,m):  \n    '''\n    Write a python function to find quotient of two numbers (rounded down to the nearest integer).\n    '''\n", "entry_point": "find", "tests": ["find(10,3)", "find(4,2)", "find(20,5)"]}
{"task_id": "MbppEval/293", "prompt": "import math\ndef otherside_rightangle(w,h):\n    '''\n    Write a function to find the third side of a right angled triangle.\n    '''\n", "entry_point": "otherside_rightangle", "tests": ["otherside_rightangle(7,8)", "otherside_rightangle(3,4)", "otherside_rightangle(7,15)"]}
{"task_id": "MbppEval/294", "prompt": "def max_val(listval):\n    '''\n    Write a function to find the maximum value in a given heterogeneous list.\n    '''\n", "entry_point": "max_val", "tests": ["max_val(['Python', 3, 2, 4, 5, 'version'])", "max_val(['Python', 15, 20, 25])", "max_val(['Python', 30, 20, 40, 50, 'version'])"]}
{"task_id": "MbppEval/295", "prompt": "def sum_div(number):\n    '''\n    Write a function to return the sum of all divisors of a number.\n    '''\n", "entry_point": "sum_div", "tests": ["sum_div(8)", "sum_div(12)", "sum_div(7)"]}
{"task_id": "MbppEval/296", "prompt": "def get_Inv_Count(arr): \n    '''\n    Write a python function to count inversions in an array.\n    '''\n", "entry_point": "get_Inv_Count", "tests": ["get_Inv_Count([1,20,6,4,5])", "get_Inv_Count([1,2,1])", "get_Inv_Count([1,2,5,6,1])"]}
{"task_id": "MbppEval/297", "prompt": "def flatten_list(list1):\n    '''\n    Write a function to flatten a given nested list structure.\n    '''\n", "entry_point": "flatten_list", "tests": ["flatten_list([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])", "flatten_list([[10, 20], [40], [30, 56, 25], [10, 20], [33], [40]])", "flatten_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])"]}
{"task_id": "MbppEval/299", "prompt": "from collections import defaultdict\ndef max_aggregate(stdata):\n    '''\n    Write a function to calculate the maximum aggregate from the list of tuples.\n    '''\n", "entry_point": "max_aggregate", "tests": ["max_aggregate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])", "max_aggregate([('Juan Whelan',50),('Sabah Colley',48),('Peter Nichols',37),('Juan Whelan',22),('Sabah Colley',14)])", "max_aggregate([('Juan Whelan',10),('Sabah Colley',20),('Peter Nichols',30),('Juan Whelan',40),('Sabah Colley',50)])"]}
{"task_id": "MbppEval/300", "prompt": "def count_binary_seq(n): \n    '''\n    Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.\n    '''\n", "entry_point": "count_binary_seq", "tests": ["math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)", "math.isclose(count_binary_seq(2), 6.0, rel_tol=0.001)", "math.isclose(count_binary_seq(3), 20.0, rel_tol=0.001)"]}
{"task_id": "MbppEval/301", "prompt": "def dict_depth(d):\n    '''\n    Write a function to find the depth of a dictionary.\n    '''\n", "entry_point": "dict_depth", "tests": ["dict_depth({'a':1, 'b': {'c': {'d': {}}}})", "dict_depth({'a':1, 'b': {'c':'python'}})", "dict_depth({1: 'Sun', 2: {3: {4:'Mon'}}})"]}
{"task_id": "MbppEval/304", "prompt": "def find_Element(arr,ranges,rotations,index) :  \n    '''\n    Write a python function to find element at a given index after number of rotations.\n    '''\n", "entry_point": "find_Element", "tests": ["find_Element([1,2,3,4,5],[[0,2],[0,3]],2,1)", "find_Element([1,2,3,4],[[0,1],[0,2]],1,2)", "find_Element([1,2,3,4,5,6],[[0,1],[0,2]],1,1)"]}
{"task_id": "MbppEval/305", "prompt": "import re\ndef start_withp(words):\n    '''\n    Write a function to return two words from a list of words starting with letter 'p'.\n    '''\n", "entry_point": "start_withp", "tests": ["start_withp([\"Python PHP\", \"Java JavaScript\", \"c c++\"])", "start_withp([\"Python Programming\",\"Java Programming\"])", "start_withp([\"Pqrst Pqr\",\"qrstuv\"])"]}
{"task_id": "MbppEval/306", "prompt": "def max_sum_increasing_subseq(a, n, index, k):\n    '''\n    Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n    '''\n", "entry_point": "max_sum_increasing_subseq", "tests": ["max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6)", "max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 2, 5)", "max_sum_increasing_subseq([11, 15, 19, 21, 26, 28, 31], 7, 2, 4)"]}
{"task_id": "MbppEval/307", "prompt": "from copy import deepcopy\ndef colon_tuplex(tuplex,m,n):\n    '''\n    Write a function to get a colon of a tuple.\n    '''\n", "entry_point": "colon_tuplex", "tests": ["colon_tuplex((\"HELLO\", 5, [], True) ,2,50)", "colon_tuplex((\"HELLO\", 5, [], True) ,2,100)", "colon_tuplex((\"HELLO\", 5, [], True) ,2,500)"]}
{"task_id": "MbppEval/308", "prompt": "def large_product(nums1, nums2, N):\n    '''\n    Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n    '''\n", "entry_point": "large_product", "tests": ["large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)", "large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],4)", "large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],5)"]}
{"task_id": "MbppEval/309", "prompt": "def maximum(a,b):   \n    '''\n    Write a python function to find the maximum of two numbers.\n    '''\n", "entry_point": "maximum", "tests": ["maximum(5,10)", "maximum(-1,-2)", "maximum(9,7)"]}
{"task_id": "MbppEval/310", "prompt": "def string_to_tuple(str1):\n    '''\n    Write a function to convert a given string to a tuple of characters.\n    '''\n", "entry_point": "string_to_tuple", "tests": ["string_to_tuple(\"python 3.0\")", "string_to_tuple(\"item1\")", "string_to_tuple(\"15.10\")"]}
{"task_id": "MbppEval/311", "prompt": "def set_left_most_unset_bit(n): \n    '''\n    Write a python function to set the left most unset bit.\n    '''\n", "entry_point": "set_left_most_unset_bit", "tests": ["set_left_most_unset_bit(10)", "set_left_most_unset_bit(12)", "set_left_most_unset_bit(15)"]}
{"task_id": "MbppEval/312", "prompt": "import math\ndef volume_cone(r,h):\n    '''\n    Write a function to find the volume of a cone.\n    '''\n", "entry_point": "volume_cone", "tests": ["math.isclose(volume_cone(5,12), 314.15926535897927, rel_tol=0.001)", "math.isclose(volume_cone(10,15), 1570.7963267948965, rel_tol=0.001)", "math.isclose(volume_cone(19,17), 6426.651371693521, rel_tol=0.001)"]}
{"task_id": "MbppEval/388", "prompt": "def highest_Power_of_2(n): \n    '''\n    Write a python function to find the highest power of 2 that is less than or equal to n.\n    '''\n", "entry_point": "highest_Power_of_2", "tests": ["highest_Power_of_2(10)", "highest_Power_of_2(19)", "highest_Power_of_2(32)"]}
{"task_id": "MbppEval/389", "prompt": "def find_lucas(n): \n    '''\n    Write a function to find the n'th lucas number.\n    '''\n", "entry_point": "find_lucas", "tests": ["find_lucas(9)", "find_lucas(4)", "find_lucas(3)"]}
{"task_id": "MbppEval/390", "prompt": "def add_string(list_, string):\n    '''\n    Write a function to apply a given format string to all of the elements in a list.\n    '''\n", "entry_point": "add_string", "tests": ["add_string([1,2,3,4],'temp{0}')", "add_string(['a','b','c','d'], 'python{0}')", "add_string([5,6,7,8],'string{0}')"]}
{"task_id": "MbppEval/391", "prompt": "def convert_list_dictionary(l1, l2, l3):\n    '''\n    Write a function to convert more than one list to nested dictionary.\n    '''\n", "entry_point": "convert_list_dictionary", "tests": ["convert_list_dictionary([\"S001\", \"S002\", \"S003\", \"S004\"],[\"Adina Park\", \"Leyton Marsh\", \"Duncan Boyle\", \"Saim Richards\"] ,[85, 98, 89, 92])", "convert_list_dictionary([\"abc\",\"def\",\"ghi\",\"jkl\"],[\"python\",\"program\",\"language\",\"programs\"],[100,200,300,400])", "convert_list_dictionary([\"A1\",\"A2\",\"A3\",\"A4\"],[\"java\",\"C\",\"C++\",\"DBMS\"],[10,20,30,40])"]}
{"task_id": "MbppEval/392", "prompt": "def get_max_sum (n):\n    '''\n    Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\n    '''\n", "entry_point": "get_max_sum ", "tests": ["get_max_sum(60)", "get_max_sum(10)", "get_max_sum(2)"]}
{"task_id": "MbppEval/393", "prompt": "def max_length_list(input_list):\n    '''\n    Write a function to find the list with maximum length.\n    '''\n", "entry_point": "max_length_list", "tests": ["max_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])", "max_length_list([[1,2,3,4,5],[1,2,3,4],[1,2,3],[1,2],[1]])", "max_length_list([[3,4,5],[6,7,8,9],[10,11,12]])"]}
{"task_id": "MbppEval/394", "prompt": "def check_distinct(test_tup):\n    '''\n    Write a function to check if given tuple contains no duplicates.\n    '''\n", "entry_point": "check_distinct", "tests": ["check_distinct((1, 4, 5, 6, 1, 4))", "check_distinct((1, 4, 5, 6))", "check_distinct((2, 3, 4, 5, 6))"]}
{"task_id": "MbppEval/395", "prompt": "def first_non_repeating_character(str1):\n    '''\n    Write a python function to find the first non-repeated character in a given string.\n    '''\n", "entry_point": "first_non_repeating_character", "tests": ["first_non_repeating_character(\"abcabc\")", "first_non_repeating_character(\"abc\")", "first_non_repeating_character(\"ababc\")"]}
{"task_id": "MbppEval/396", "prompt": "import re  \nregex = r'^[a-z]$|^([a-z]).*\\1$'\ndef check_char(string): \n    '''\n    Write a function to check whether the given string starts and ends with the same character or not.\n    '''\n", "entry_point": "check_char", "tests": ["check_char(\"abba\")", "check_char(\"a\")", "check_char(\"abcd\")"]}
{"task_id": "MbppEval/397", "prompt": "def median_numbers(a,b,c):\n    '''\n    Write a function to find the median of three numbers.\n    '''\n", "entry_point": "median_numbers", "tests": ["median_numbers(25,55,65)", "median_numbers(20,10,30)", "median_numbers(15,45,75)"]}
{"task_id": "MbppEval/398", "prompt": "def sum_of_digits(nums):\n    '''\n    Write a function to compute the sum of digits of each number of a given list.\n    '''\n", "entry_point": "sum_of_digits", "tests": ["sum_of_digits([10,2,56])", "sum_of_digits([[10,20,4,5,'b',70,'a']])", "sum_of_digits([10,20,-4,5,-70])"]}
{"task_id": "MbppEval/399", "prompt": "def bitwise_xor(test_tup1, test_tup2):\n    '''\n    Write a function to perform the mathematical bitwise xor operation across the given tuples.\n    '''\n", "entry_point": "bitwise_xor", "tests": ["bitwise_xor((10, 4, 6, 9), (5, 2, 3, 3))", "bitwise_xor((11, 5, 7, 10), (6, 3, 4, 4))", "bitwise_xor((12, 6, 8, 11), (7, 4, 5, 6))"]}
{"task_id": "MbppEval/400", "prompt": "def extract_freq(test_list):\n    '''\n    Write a function to extract the number of unique tuples in the given list.\n    '''\n", "entry_point": "extract_freq", "tests": ["extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] )", "extract_freq([(4, 15), (2, 3), (5, 4), (6, 7)] )", "extract_freq([(5, 16), (2, 3), (6, 5), (6, 9)] )"]}
{"task_id": "MbppEval/401", "prompt": "def add_nested_tuples(test_tup1, test_tup2):\n    '''\n    Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    '''\n", "entry_point": "add_nested_tuples", "tests": ["add_nested_tuples(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3)))", "add_nested_tuples(((2, 4), (5, 6), (3, 10), (2, 11)), ((7, 8), (4, 10), (2, 2), (8, 4)))", "add_nested_tuples(((3, 5), (6, 7), (4, 11), (3, 12)), ((8, 9), (5, 11), (3, 3), (9, 5)))"]}
{"task_id": "MbppEval/404", "prompt": "def minimum(a,b):   \n    '''\n    Write a python function to find the minimum of two numbers.\n    '''\n", "entry_point": "minimum", "tests": ["minimum(1,2)", "minimum(-5,-4)", "minimum(0,0)"]}
{"task_id": "MbppEval/405", "prompt": "def check_tuplex(tuplex,tuple1): \n    '''\n    Write a function to check whether an element exists within a tuple.\n    '''\n", "entry_point": "check_tuplex", "tests": ["check_tuplex((\"w\", 3, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"),'r')", "check_tuplex((\"w\", 3, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"),'5')", "check_tuplex((\"w\", 3, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\",\"e\"),3)"]}
{"task_id": "MbppEval/406", "prompt": "def find_Parity(x): \n    '''\n    Write a python function to find whether the parity of a given number is odd.\n    '''\n", "entry_point": "find_Parity", "tests": ["find_Parity(12)", "find_Parity(7)", "find_Parity(10)"]}
{"task_id": "MbppEval/407", "prompt": "def rearrange_bigger(n):\n    '''\n    Write a function to create the next bigger number by rearranging the digits of a given number.\n    '''\n", "entry_point": "rearrange_bigger", "tests": ["rearrange_bigger(12)", "rearrange_bigger(10)", "rearrange_bigger(102)"]}
{"task_id": "MbppEval/408", "prompt": "import heapq\ndef k_smallest_pairs(nums1, nums2, k):\n    '''\n    Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.\n    '''\n", "entry_point": "k_smallest_pairs", "tests": ["k_smallest_pairs([1,3,7],[2,4,6],2)", "k_smallest_pairs([1,3,7],[2,4,6],1)", "k_smallest_pairs([1,3,7],[2,4,6],7)"]}
{"task_id": "MbppEval/409", "prompt": "def min_product_tuple(list1):\n    '''\n    Write a function to find the minimum product from the pairs of tuples within a given list.\n    '''\n", "entry_point": "min_product_tuple", "tests": ["min_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )", "min_product_tuple([(10,20), (15,2), (5,10)] )", "min_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )"]}
{"task_id": "MbppEval/410", "prompt": "def min_val(listval):\n    '''\n    Write a function to find the minimum value in a given heterogeneous list.\n    '''\n", "entry_point": "min_val", "tests": ["min_val(['Python', 3, 2, 4, 5, 'version'])", "min_val(['Python', 15, 20, 25])", "min_val(['Python', 30, 20, 40, 50, 'version'])"]}
{"task_id": "MbppEval/411", "prompt": "import re\ndef snake_to_camel(word):\n    '''\n    Write a function to convert the given snake case string to camel case string.\n    '''\n", "entry_point": "snake_to_camel", "tests": ["snake_to_camel('android_tv')", "snake_to_camel('google_pixel')", "snake_to_camel('apple_watch')"]}
{"task_id": "MbppEval/412", "prompt": "def remove_odd(l):\n    '''\n    Write a python function to remove odd numbers from a given list.\n    '''\n", "entry_point": "remove_odd", "tests": ["remove_odd([1,2,3])", "remove_odd([2,4,6])", "remove_odd([10,20,3])"]}
{"task_id": "MbppEval/413", "prompt": "def extract_nth_element(list1, n):\n    '''\n    Write a function to extract the nth element from a given list of tuples.\n    '''\n", "entry_point": "extract_nth_element", "tests": ["extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)", "extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,2)", "extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)],1)"]}
{"task_id": "MbppEval/414", "prompt": "def overlapping(list1,list2):  \n    '''\n    Write a python function to check whether any value in a sequence exists in a sequence or not.\n    '''\n", "entry_point": "overlapping", "tests": ["overlapping([1,2,3,4,5],[6,7,8,9])", "overlapping([1,2,3],[4,5,6])", "overlapping([1,4,5],[1,4,5])"]}
{"task_id": "MbppEval/415", "prompt": "def max_Product(arr): \n    '''\n    Write a python function to find a pair with highest product from a given array of integers.\n    '''\n", "entry_point": "max_Product", "tests": ["max_Product([1,2,3,4,7,0,8,4])", "max_Product([0,-1,-2,-4,5,0,-6])", "max_Product([1,2,3])"]}
{"task_id": "MbppEval/417", "prompt": "def group_tuples(Input): \n    '''\n    Write a function to find common first element in given list of tuple.\n    '''\n", "entry_point": "group_tuples", "tests": ["group_tuples([('x', 'y'), ('x', 'z'), ('w', 't')])", "group_tuples([('a', 'b'), ('a', 'c'), ('d', 'e')])", "group_tuples([('f', 'g'), ('f', 'g'), ('h', 'i')])"]}
{"task_id": "MbppEval/418", "prompt": "def Find_Max(lst): \n    '''\n    Write a python function to find the element of a list having maximum length.\n    '''\n", "entry_point": "Find_Max", "tests": ["Find_Max([['A'],['A','B'],['A','B','C']])", "Find_Max([[1],[1,2],[1,2,3]])", "Find_Max([[1,1],[1,2,3],[1,5,6,1]])"]}
{"task_id": "MbppEval/419", "prompt": "def round_and_sum(list1):\n    '''\n    Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    '''\n", "entry_point": "round_and_sum", "tests": ["round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50])", "round_and_sum([5,2,9,24.3,29])", "round_and_sum([25.0,56.7,89.2])"]}
{"task_id": "MbppEval/420", "prompt": "def cube_Sum(n): \n    '''\n    Write a python function to find the cube sum of first n even natural numbers.\n    '''\n", "entry_point": "cube_Sum", "tests": ["cube_Sum(2)", "cube_Sum(3)", "cube_Sum(4)"]}
{"task_id": "MbppEval/421", "prompt": "def concatenate_tuple(test_tup):\n    '''\n    Write a function to concatenate each element of tuple by the delimiter.\n    '''\n", "entry_point": "concatenate_tuple", "tests": ["concatenate_tuple((\"ID\", \"is\", 4, \"UTS\") )", "concatenate_tuple((\"QWE\", \"is\", 4, \"RTY\") )", "concatenate_tuple((\"ZEN\", \"is\", 4, \"OP\") )"]}
{"task_id": "MbppEval/422", "prompt": "def find_Average_Of_Cube(n):  \n    '''\n    Write a python function to find the average of cubes of first n natural numbers.\n    '''\n", "entry_point": "find_Average_Of_Cube", "tests": ["find_Average_Of_Cube(2)", "find_Average_Of_Cube(3)", "find_Average_Of_Cube(1)"]}
{"task_id": "MbppEval/424", "prompt": "def extract_rear(test_tuple):\n    '''\n    Write a function to extract only the rear index element of each string in the given tuple.\n    '''\n", "entry_point": "extract_rear", "tests": ["extract_rear(('Mers', 'for', 'Vers') )", "extract_rear(('Avenge', 'for', 'People') )", "extract_rear(('Gotta', 'get', 'go') )"]}
{"task_id": "MbppEval/425", "prompt": "def count_element_in_list(list1, x): \n    '''\n    Write a function to count the number of sublists containing a particular element.\n    '''\n", "entry_point": "count_element_in_list", "tests": ["count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)", "count_element_in_list([['A', 'B'], ['A', 'C'], ['A', 'D', 'E'], ['B', 'C', 'D']],'A')", "count_element_in_list([['A', 'B'], ['A', 'C'], ['A', 'D', 'E'], ['B', 'C', 'D']],'E')"]}
{"task_id": "MbppEval/426", "prompt": "def filter_oddnumbers(nums):\n    '''\n    Write a function to filter odd numbers.\n    '''\n", "entry_point": "filter_oddnumbers", "tests": ["filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])", "filter_oddnumbers([10,20,45,67,84,93])", "filter_oddnumbers([5,7,9,8,6,4,3])"]}
{"task_id": "MbppEval/427", "prompt": "import re\ndef change_date_format(dt):\n    '''\n    Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    '''\n", "entry_point": "change_date_format", "tests": ["change_date_format(\"2026-01-02\")", "change_date_format(\"2020-11-13\")", "change_date_format(\"2021-04-26\")"]}
{"task_id": "MbppEval/428", "prompt": "def shell_sort(my_list):\n    '''\n    Write a function to sort the given array by using shell sort.\n    '''\n", "entry_point": "shell_sort", "tests": ["shell_sort([12, 23, 4, 5, 3, 2, 12, 81, 56, 95])", "shell_sort([24, 22, 39, 34, 87, 73, 68])", "shell_sort([32, 30, 16, 96, 82, 83, 74])"]}
{"task_id": "MbppEval/429", "prompt": "def and_tuples(test_tup1, test_tup2):\n    '''\n    Write a function to extract the elementwise and tuples from the given two tuples.\n    '''\n", "entry_point": "and_tuples", "tests": ["and_tuples((10, 4, 6, 9), (5, 2, 3, 3))", "and_tuples((1, 2, 3, 4), (5, 6, 7, 8))", "and_tuples((8, 9, 11, 12), (7, 13, 14, 17))"]}
{"task_id": "MbppEval/430", "prompt": "def parabola_directrix(a, b, c): \n    '''\n    Write a function to find the directrix of a parabola.\n    '''\n", "entry_point": "parabola_directrix", "tests": ["parabola_directrix(5,3,2)", "parabola_directrix(9,8,4)", "parabola_directrix(2,4,6)"]}
{"task_id": "MbppEval/431", "prompt": "def common_element(list1, list2):\n    '''\n    Write a function that takes two lists and returns true if they have at least one common element.\n    '''\n", "entry_point": "common_element", "tests": ["common_element([1,2,3,4,5], [5,6,7,8,9])", "common_element([1,2,3,4,5], [6,7,8,9])", "common_element(['a','b','c'], ['d','b','e'])"]}
{"task_id": "MbppEval/432", "prompt": "def median_trapezium(base1,base2,height):\n    '''\n    Write a function to find the median length of a trapezium.\n    '''\n", "entry_point": "median_trapezium", "tests": ["median_trapezium(15,25,35)", "median_trapezium(10,20,30)", "median_trapezium(6,9,4)"]}
{"task_id": "MbppEval/433", "prompt": "def check_greater(arr, number):\n    '''\n    Write a function to check whether the entered number is greater than the elements of the given array.\n    '''\n", "entry_point": "check_greater", "tests": ["check_greater([1, 2, 3, 4, 5], 4)", "check_greater([2, 3, 4, 5, 6], 8)", "check_greater([9, 7, 4, 8, 6, 1], 11)"]}
{"task_id": "MbppEval/434", "prompt": "import re\ndef text_match_one(text):\n    '''\n    Write a function that matches a string that has an a followed by one or more b's.\n    '''\n", "entry_point": "text_match_one", "tests": ["text_match_one(\"ac\")", "text_match_one(\"dc\")", "text_match_one(\"abba\")"]}
{"task_id": "MbppEval/435", "prompt": "def last_Digit(n) :\n    '''\n    Write a python function to find the last digit of a given number.\n    '''\n", "entry_point": "last_Digit", "tests": ["last_Digit(123)", "last_Digit(25)", "last_Digit(30)"]}
{"task_id": "MbppEval/436", "prompt": "def neg_nos(list1):\n    '''\n    Write a python function to return the negative numbers in a list.\n    '''\n", "entry_point": "neg_nos", "tests": ["neg_nos([-1,4,5,-6])", "neg_nos([-1,-2,3,4])", "neg_nos([-7,-6,8,9])"]}
{"task_id": "MbppEval/437", "prompt": "def remove_odd(str1):\n    '''\n    Write a function to remove odd characters in a string.\n    '''\n", "entry_point": "remove_odd", "tests": ["remove_odd(\"python\")", "remove_odd(\"program\")", "remove_odd(\"language\")"]}
{"task_id": "MbppEval/438", "prompt": "def count_bidirectional(test_list):\n    '''\n    Write a function to count bidirectional tuple pairs.\n    '''\n", "entry_point": "count_bidirectional", "tests": ["count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)] )", "count_bidirectional([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)] )", "count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)] )"]}
{"task_id": "MbppEval/439", "prompt": "def multiple_to_single(L):\n    '''\n    Write a function to join a list of multiple integers into a single integer.\n    '''\n", "entry_point": "multiple_to_single", "tests": ["multiple_to_single([11, 33, 50])", "multiple_to_single([-1,2,3,4,5,6])", "multiple_to_single([10,15,20,25])"]}
{"task_id": "MbppEval/440", "prompt": "import re\ndef find_adverb_position(text):\n    '''\n    Write a function to find the first adverb and their positions in a given sentence.\n    '''\n", "entry_point": "find_adverb_position", "tests": ["find_adverb_position(\"clearly!! we can see the sky\")", "find_adverb_position(\"seriously!! there are many roses\")", "find_adverb_position(\"unfortunately!! sita is going to home\")"]}
{"task_id": "MbppEval/441", "prompt": "def surfacearea_cube(l):\n    '''\n    Write a function to find the surface area of a cube of a given size.\n    '''\n", "entry_point": "surfacearea_cube", "tests": ["surfacearea_cube(5)", "surfacearea_cube(3)", "surfacearea_cube(10)"]}
{"task_id": "MbppEval/442", "prompt": "from array import array\ndef positive_count(nums):\n    '''\n    Write a function to find the ration of positive numbers in an array of integers.\n    '''\n", "entry_point": "positive_count", "tests": ["positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])", "positive_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])", "positive_count([2, 4, -6, -9, 11, -12, 14, -5, 17])"]}
{"task_id": "MbppEval/443", "prompt": "def largest_neg(list1): \n    '''\n    Write a python function to find the largest negative number from the given list.\n    '''\n", "entry_point": "largest_neg", "tests": ["largest_neg([1,2,3,-4,-6])", "largest_neg([1,2,3,-8,-9])", "largest_neg([1,2,3,4,-1])"]}
{"task_id": "MbppEval/444", "prompt": "def trim_tuple(test_list, K):\n    '''\n    Write a function to trim each tuple by k in the given tuple list.\n    '''\n", "entry_point": "trim_tuple", "tests": ["trim_tuple([(5, 3, 2, 1, 4), (3, 4, 9, 2, 1),(9, 1, 2, 3, 5), (4, 8, 2, 1, 7)], 2)", "trim_tuple([(5, 3, 2, 1, 4), (3, 4, 9, 2, 1), (9, 1, 2, 3, 5), (4, 8, 2, 1, 7)], 1)", "trim_tuple([(7, 8, 4, 9), (11, 8, 12, 4),(4, 1, 7, 8), (3, 6, 9, 7)], 1)"]}
{"task_id": "MbppEval/445", "prompt": "def index_multiplication(test_tup1, test_tup2):\n    '''\n    Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    '''\n", "entry_point": "index_multiplication", "tests": ["index_multiplication(((1, 3), (4, 5), (2, 9), (1, 10)),((6, 7), (3, 9), (1, 1), (7, 3)) )", "index_multiplication(((2, 4), (5, 6), (3, 10), (2, 11)),((7, 8), (4, 10), (2, 2), (8, 4)) )", "index_multiplication(((3, 5), (6, 7), (4, 11), (3, 12)),((8, 9), (5, 11), (3, 3), (9, 5)) )"]}
{"task_id": "MbppEval/446", "prompt": "from collections import Counter \ndef count_Occurrence(tup, lst): \n    '''\n    Write a python function to count the occurence of all elements of list in a tuple.\n    '''\n", "entry_point": "count_Occurrence", "tests": ["count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] )", "count_Occurrence((1, 2, 3, 1, 4, 6, 7, 1, 4),[1, 4, 7])", "count_Occurrence((1,2,3,4,5,6),[1,2])"]}
{"task_id": "MbppEval/447", "prompt": "def cube_nums(nums):\n    '''\n    Write a function to find cubes of individual elements in a list.\n    '''\n", "entry_point": "cube_nums", "tests": ["cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])", "cube_nums([10,20,30])", "cube_nums([12,15])"]}
{"task_id": "MbppEval/448", "prompt": "def cal_sum(n): \n    '''\n    Write a function to calculate the sum of perrin numbers.\n    '''\n", "entry_point": "cal_sum", "tests": ["cal_sum(9)", "cal_sum(10)", "cal_sum(11)"]}
{"task_id": "MbppEval/450", "prompt": "def extract_string(str, l):\n    '''\n    Write a function to extract specified size of strings from a given list of string values.\n    '''\n", "entry_point": "extract_string", "tests": ["extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,8)", "extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,6)", "extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,9)"]}
{"task_id": "MbppEval/451", "prompt": "import re\ndef remove_whitespaces(text1):\n    '''\n    Write a function to remove all whitespaces from the given string.\n    '''\n", "entry_point": "remove_whitespaces", "tests": ["remove_whitespaces(' Google    Flutter ')", "remove_whitespaces(' Google    Dart ')", "remove_whitespaces(' iOS    Swift ')"]}
{"task_id": "MbppEval/452", "prompt": "def loss_amount(actual_cost,sale_amount): \n    '''\n    Write a function that gives loss amount on a sale if the given amount has loss else return 0.\n    '''\n", "entry_point": "loss_amount", "tests": ["loss_amount(1500,1200)", "loss_amount(100,200)", "loss_amount(2000,5000)"]}
{"task_id": "MbppEval/453", "prompt": "import math \ndef sumofFactors(n) : \n    '''\n    Write a python function to find the sum of even factors of a number.\n    '''\n", "entry_point": "sumofFactors", "tests": ["sumofFactors(18)", "sumofFactors(30)", "sumofFactors(6)"]}
{"task_id": "MbppEval/454", "prompt": "import re\ndef text_match_wordz(text):\n    '''\n    Write a function that matches a word containing 'z'.\n    '''\n", "entry_point": "text_match_wordz", "tests": ["text_match_wordz(\"pythonz.\")", "text_match_wordz(\"xyz.\")", "text_match_wordz(\"  lang  .\")"]}
{"task_id": "MbppEval/455", "prompt": "def check_monthnumb_number(monthnum2):\n    '''\n    Write a function to check whether the given month number contains 31 days or not.\n    '''\n", "entry_point": "check_monthnumb_number", "tests": ["check_monthnumb_number(5)", "check_monthnumb_number(2)", "check_monthnumb_number(6)"]}
{"task_id": "MbppEval/456", "prompt": "def reverse_string_list(stringlist):\n    '''\n    Write a function to reverse each string in a given list of string values.\n    '''\n", "entry_point": "reverse_string_list", "tests": ["reverse_string_list(['Red', 'Green', 'Blue', 'White', 'Black'])", "reverse_string_list(['john','amal','joel','george'])", "reverse_string_list(['jack','john','mary'])"]}
{"task_id": "MbppEval/457", "prompt": "def Find_Min(lst): \n    '''\n    Write a python function to find the sublist having minimum length.\n    '''\n", "entry_point": "Find_Min", "tests": ["Find_Min([[1],[1,2],[1,2,3]])", "Find_Min([[1,1],[1,1,1],[1,2,7,8]])", "Find_Min([['x'],['x','y'],['x','y','z']])"]}
{"task_id": "MbppEval/458", "prompt": "def rectangle_area(l,b):\n    '''\n    Write a function to find the area of a rectangle.\n    '''\n", "entry_point": "rectangle_area", "tests": ["rectangle_area(10,20)", "rectangle_area(10,5)", "rectangle_area(4,2)"]}
{"task_id": "MbppEval/459", "prompt": "import re\ndef remove_uppercase(str1):\n    '''\n    Write a function to remove uppercase substrings from a given string.\n    '''\n", "entry_point": "remove_uppercase", "tests": ["remove_uppercase('cAstyoUrFavoRitETVshoWs')", "remove_uppercase('wAtchTheinTernEtrAdIo')", "remove_uppercase('VoicESeaRchAndreComMendaTionS')"]}
{"task_id": "MbppEval/460", "prompt": "def Extract(lst): \n    '''\n    Write a python function to get the first element of each sublist.\n    '''\n", "entry_point": "Extract", "tests": ["Extract([[1, 2], [3, 4, 5], [6, 7, 8, 9]])", "Extract([[1,2,3],[4, 5]])", "Extract([[9,8,1],[1,2]])"]}
{"task_id": "MbppEval/461", "prompt": "def upper_ctr(str):\n    '''\n    Write a python function to count the upper case characters in a given string.\n    '''\n", "entry_point": "upper_ctr", "tests": ["upper_ctr('PYthon')", "upper_ctr('BigData')", "upper_ctr('program')"]}
{"task_id": "MbppEval/462", "prompt": "def combinations_list(list1):\n    '''\n    Write a function to find all possible combinations of the elements of a given list.\n    '''\n", "entry_point": "combinations_list", "tests": ["combinations_list(['orange', 'red', 'green', 'blue'])", "combinations_list(['red', 'green', 'blue', 'white', 'black', 'orange'])", "combinations_list(['red', 'green', 'black', 'orange'])"]}
{"task_id": "MbppEval/463", "prompt": "def max_subarray_product(arr):\n    '''\n    Write a function to find the maximum product subarray of the given array.\n    '''\n", "entry_point": "max_subarray_product", "tests": ["max_subarray_product([1, -2, -3, 0, 7, -8, -2])", "max_subarray_product([6, -3, -10, 0, 2])", "max_subarray_product([-2, -40, 0, -2, -3])"]}
{"task_id": "MbppEval/464", "prompt": "def check_value(dict, n):\n    '''\n    Write a function to check if all values are same in a dictionary.\n    '''\n", "entry_point": "check_value", "tests": ["check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},10)", "check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},12)", "check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},5)"]}
{"task_id": "MbppEval/465", "prompt": "def drop_empty(dict1):\n    '''\n    Write a function to drop empty items from a given dictionary.\n    '''\n", "entry_point": "drop_empty", "tests": ["drop_empty({'c1': 'Red', 'c2': 'Green', 'c3':None})", "drop_empty({'c1': 'Red', 'c2': None, 'c3':None})", "drop_empty({'c1': None, 'c2': 'Green', 'c3':None})"]}
{"task_id": "MbppEval/468", "prompt": "def max_product(arr):   \n    '''\n    Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\n    '''\n", "entry_point": "max_product", "tests": ["max_product([3, 100, 4, 5, 150, 6])", "max_product([4, 42, 55, 68, 80])", "max_product([10, 22, 9, 33, 21, 50, 41, 60])"]}
{"task_id": "MbppEval/470", "prompt": "def add_pairwise(test_tup):\n    '''\n    Write a function to find the pairwise addition of the neighboring elements of the given tuple.\n    '''\n", "entry_point": "add_pairwise", "tests": ["add_pairwise((1, 5, 7, 8, 10))", "add_pairwise((2, 6, 8, 9, 11))", "add_pairwise((3, 7, 9, 10, 12))"]}
{"task_id": "MbppEval/471", "prompt": "def find_remainder(arr, n): \n    '''\n    Write a python function to find the product of the array multiplication modulo n.\n    '''\n", "entry_point": "find_remainder", "tests": ["find_remainder([ 100, 10, 5, 25, 35, 14 ],11)", "find_remainder([1,1,1],1)", "find_remainder([1,2,1],2)"]}
{"task_id": "MbppEval/472", "prompt": "def check_Consecutive(l): \n    '''\n    Write a python function to check whether the given list contains consecutive numbers or not.\n    '''\n", "entry_point": "check_Consecutive", "tests": ["check_Consecutive([1,2,3,4,5])", "check_Consecutive([1,2,3,5,6])", "check_Consecutive([1,2,1])"]}
{"task_id": "MbppEval/473", "prompt": "def tuple_intersection(test_list1, test_list2):\n    '''\n    Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.\n    '''\n", "entry_point": "tuple_intersection", "tests": ["tuple_intersection([(3, 4), (5, 6), (9, 10), (4, 5)] , [(5, 4), (3, 4), (6, 5), (9, 11)])", "tuple_intersection([(4, 1), (7, 4), (11, 13), (17, 14)] , [(1, 4), (7, 4), (16, 12), (10, 13)])", "tuple_intersection([(2, 1), (3, 2), (1, 3), (1, 4)] , [(11, 2), (2, 3), (6, 2), (1, 3)])"]}
{"task_id": "MbppEval/474", "prompt": "def replace_char(str1,ch,newch):\n    '''\n    Write a function to replace characters in a string.\n    '''\n", "entry_point": "replace_char", "tests": ["replace_char(\"polygon\",'y','l')", "replace_char(\"character\",'c','a')", "replace_char(\"python\",'l','a')"]}
{"task_id": "MbppEval/475", "prompt": "from collections import Counter\ndef sort_counter(dict1):\n    '''\n    Write a function to sort a dictionary by value.\n    '''\n", "entry_point": "sort_counter", "tests": ["sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})", "sort_counter({'Math':400, 'Physics':300, 'Chemistry':250})", "sort_counter({'Math':900, 'Physics':1000, 'Chemistry':1250})"]}
{"task_id": "MbppEval/476", "prompt": "def big_sum(nums):\n    '''\n    Write a python function to find the sum of the largest and smallest value in a given array.\n    '''\n", "entry_point": "big_sum", "tests": ["big_sum([1,2,3])", "big_sum([-1,2,3,4])", "big_sum([2,3,6])"]}
{"task_id": "MbppEval/477", "prompt": "def is_lower(string):\n    '''\n    Write a python function to convert the given string to lower case.\n    '''\n", "entry_point": "is_lower", "tests": ["is_lower(\"InValid\")", "is_lower(\"TruE\")", "is_lower(\"SenTenCE\")"]}
{"task_id": "MbppEval/478", "prompt": "import re\ndef remove_lowercase(str1):\n    '''\n    Write a function to remove lowercase substrings from a given string.\n    '''\n", "entry_point": "remove_lowercase", "tests": ["remove_lowercase(\"PYTHon\")", "remove_lowercase(\"FInD\")", "remove_lowercase(\"STRinG\")"]}
{"task_id": "MbppEval/479", "prompt": "def first_Digit(n) :  \n    '''\n    Write a python function to find the first digit of a given number.\n    '''\n", "entry_point": "first_Digit", "tests": ["first_Digit(123)", "first_Digit(456)", "first_Digit(12)"]}
{"task_id": "MbppEval/554", "prompt": "def Split(list): \n    '''\n    Write a python function which takes a list of integers and only returns the odd ones.\n    '''\n", "entry_point": "Split", "tests": ["Split([1,2,3,4,5,6])", "Split([10,11,12,13])", "Split([7,8,9,1])"]}
{"task_id": "MbppEval/555", "prompt": "def difference(n) :  \n    '''\n    Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n    '''\n", "entry_point": "difference", "tests": ["difference(3)", "difference(5)", "difference(2)"]}
{"task_id": "MbppEval/556", "prompt": "def find_Odd_Pair(A,N) : \n    '''\n    Write a python function to count the number of pairs whose xor value is odd.\n    '''\n", "entry_point": "find_Odd_Pair", "tests": ["find_Odd_Pair([5,4,7,2,1],5)", "find_Odd_Pair([7,2,8,1,0,5,11],7)", "find_Odd_Pair([1,2,3],3)"]}
{"task_id": "MbppEval/557", "prompt": "def toggle_string(string):\n    '''\n    Write a function to toggle the case of all characters in a string.\n    '''\n", "entry_point": "toggle_string", "tests": ["toggle_string(\"Python\")", "toggle_string(\"Pangram\")", "toggle_string(\"LIttLE\")"]}
{"task_id": "MbppEval/558", "prompt": "def digit_distance_nums(n1, n2):\n    '''\n    Write a python function to find the sum of the per-digit difference between two integers.\n    '''\n", "entry_point": "digit_distance_nums", "tests": ["digit_distance_nums(1,2)", "digit_distance_nums(23,56)", "digit_distance_nums(123,256)"]}
{"task_id": "MbppEval/559", "prompt": "def max_sub_array_sum(a, size):\n    '''\n    Write a function to find the sum of the largest contiguous sublist in the given list.\n    '''\n", "entry_point": "max_sub_array_sum", "tests": ["max_sub_array_sum([-2, -3, 4, -1, -2, 1, 5, -3], 8)", "max_sub_array_sum([-3, -4, 5, -2, -3, 2, 6, -4], 8)", "max_sub_array_sum([-4, -5, 6, -3, -4, 3, 7, -5], 8)"]}
{"task_id": "MbppEval/560", "prompt": "def union_elements(test_tup1, test_tup2):\n    '''\n    Write a function to find the union of the elements of two given tuples and output them in sorted order.\n    '''\n", "entry_point": "union_elements", "tests": ["union_elements((3, 4, 5, 6),(5, 7, 4, 10) )", "union_elements((1, 2, 3, 4),(3, 4, 5, 6) )", "union_elements((11, 12, 13, 14),(13, 15, 16, 17) )"]}
{"task_id": "MbppEval/562", "prompt": "def Find_Max_Length(lst):  \n    '''\n    Write a python function to find the length of the longest sublists.\n    '''\n", "entry_point": "Find_Max_Length", "tests": ["Find_Max_Length([[1],[1,4],[5,6,7,8]])", "Find_Max_Length([[0,1],[2,2,],[3,2,1]])", "Find_Max_Length([[7],[22,23],[13,14,15],[10,20,30,40,50]])"]}
{"task_id": "MbppEval/563", "prompt": "import re\ndef extract_values(text):\n    '''\n    Write a function to extract values between quotation marks from a string.\n    '''\n", "entry_point": "extract_values", "tests": ["extract_values('\"Python\", \"PHP\", \"Java\"')", "extract_values('\"python\",\"program\",\"language\"')", "extract_values('\"red\",\"blue\",\"green\",\"yellow\"')"]}
{"task_id": "MbppEval/564", "prompt": "def count_Pairs(arr,n): \n    '''\n    Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    '''\n", "entry_point": "count_Pairs", "tests": ["count_Pairs([1,2,1],3)", "count_Pairs([1,1,1,1],4)", "count_Pairs([1,2,3,4,5],5)"]}
{"task_id": "MbppEval/565", "prompt": "def split(word): \n    '''\n    Write a python function to split a string into characters.\n    '''\n", "entry_point": "split", "tests": ["split('python')", "split('Name')", "split('program')"]}
{"task_id": "MbppEval/566", "prompt": "def sum_digits(n):\n    '''\n    Write a function to get the sum of the digits of a non-negative integer.\n    '''\n", "entry_point": "sum_digits", "tests": ["sum_digits(345)", "sum_digits(12)", "sum_digits(97)"]}
{"task_id": "MbppEval/567", "prompt": "def issort_list(list1):\n    '''\n    Write a function to check whether a specified list is sorted or not.\n    '''\n", "entry_point": "issort_list", "tests": ["issort_list([1,2,4,6,8,10,12,14,16,17])", "issort_list([1, 2, 4, 6, 8, 10, 12, 14, 20, 17])", "issort_list([1, 2, 4, 6, 8, 10,15,14,20])"]}
{"task_id": "MbppEval/568", "prompt": "def empty_list(length):\n    '''\n    Write a function to create a list of N empty dictionaries.\n    '''\n", "entry_point": "empty_list", "tests": ["empty_list(5)", "empty_list(6)", "empty_list(7)"]}
{"task_id": "MbppEval/569", "prompt": "def sort_sublists(list1):\n    '''\n    Write a function to sort each sublist of strings in a given list of lists.\n    '''\n", "entry_point": "sort_sublists", "tests": ["sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])", "sort_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']])", "sort_sublists([['a','b'],['d','c'],['g','h'] , ['f','e']])"]}
{"task_id": "MbppEval/572", "prompt": "def two_unique_nums(nums):\n    '''\n    Write a python function to remove duplicate numbers from a given number of lists.\n    '''\n", "entry_point": "two_unique_nums", "tests": ["two_unique_nums([1,2,3,2,3,4,5])", "two_unique_nums([1,2,3,2,4,5])", "two_unique_nums([1,2,3,4,5])"]}
{"task_id": "MbppEval/573", "prompt": "def unique_product(list_data):\n    '''\n    Write a python function to calculate the product of the unique numbers in a given list.\n    '''\n", "entry_point": "unique_product", "tests": ["unique_product([10, 20, 30, 40, 20, 50, 60, 40])", "unique_product([1, 2, 3, 1,])", "unique_product([7, 8, 9, 0, 1, 1])"]}
{"task_id": "MbppEval/574", "prompt": "def surfacearea_cylinder(r,h):\n    '''\n    Write a function to find the surface area of a cylinder.\n    '''\n", "entry_point": "surfacearea_cylinder", "tests": ["surfacearea_cylinder(10,5)", "surfacearea_cylinder(4,5)", "surfacearea_cylinder(4,10)"]}
{"task_id": "MbppEval/576", "prompt": "def is_Sub_Array(A,B): \n    '''\n    Write a python function to check whether a list is sublist of another or not.\n    '''\n", "entry_point": "is_Sub_Array", "tests": ["is_Sub_Array([1,4,3,5],[1,2])", "is_Sub_Array([1,2,1],[1,2,1])", "is_Sub_Array([1,0,2,2],[2,2,0])"]}
{"task_id": "MbppEval/577", "prompt": "def last_Digit_Factorial(n): \n    '''\n    Write a python function to find the last digit in factorial of a given number.\n    '''\n", "entry_point": "last_Digit_Factorial", "tests": ["last_Digit_Factorial(4)", "last_Digit_Factorial(21)", "last_Digit_Factorial(30)"]}
{"task_id": "MbppEval/578", "prompt": "def interleave_lists(list1,list2,list3):\n    '''\n    Write a function to interleave 3 lists of the same length into a single flat list.\n    '''\n", "entry_point": "interleave_lists", "tests": ["interleave_lists([1,2,3,4,5,6,7],[10,20,30,40,50,60,70],[100,200,300,400,500,600,700])", "interleave_lists([10,20],[15,2],[5,10])", "interleave_lists([11,44], [10,15], [20,5])"]}
{"task_id": "MbppEval/579", "prompt": "def find_dissimilar(test_tup1, test_tup2):\n    '''\n    Write a function to find the dissimilar elements in the given two tuples.\n    '''\n", "entry_point": "find_dissimilar", "tests": ["find_dissimilar((3, 4, 5, 6), (5, 7, 4, 10))", "find_dissimilar((1, 2, 3, 4), (7, 2, 3, 9))", "find_dissimilar((21, 11, 25, 26), (26, 34, 21, 36))"]}
{"task_id": "MbppEval/580", "prompt": "def even_ele(test_tuple, even_fnc): \n    '''\n    Write a function to remove uneven elements in the nested mixed tuple.\n    '''\n", "entry_point": "even_ele", "tests": ["extract_even((4, 5, (7, 6, (2, 4)), 6, 8))", "extract_even((5, 6, (8, 7, (4, 8)), 7, 9))", "extract_even((5, 6, (9, 8, (4, 6)), 8, 10))"]}
{"task_id": "MbppEval/581", "prompt": "def surface_Area(b,s): \n    '''\n    Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    '''\n", "entry_point": "surface_Area", "tests": ["surface_Area(3,4)", "surface_Area(4,5)", "surface_Area(1,2)"]}
{"task_id": "MbppEval/582", "prompt": "def my_dict(dict1):\n    '''\n    Write a function to check if a dictionary is empty\n    '''\n", "entry_point": "my_dict", "tests": ["my_dict({10})", "my_dict({11})", "my_dict({})"]}
{"task_id": "MbppEval/583", "prompt": "def catalan_number(num):\n    '''\n    Write a function which returns nth catalan number.\n    '''\n", "entry_point": "catalan_number", "tests": ["catalan_number(10)", "catalan_number(9)", "catalan_number(7)"]}
{"task_id": "MbppEval/584", "prompt": "import re\ndef find_adverbs(text):\n    '''\n    Write a function to find the first adverb ending with ly and its positions in a given string.\n    '''\n", "entry_point": "find_adverbs", "tests": ["find_adverbs(\"Clearly, he has no excuse for such behavior.\")", "find_adverbs(\"Please handle the situation carefuly\")", "find_adverbs(\"Complete the task quickly\")"]}
{"task_id": "MbppEval/585", "prompt": "import heapq\ndef expensive_items(items,n):\n    '''\n    Write a function to find the n most expensive items in a given dataset.\n    '''\n", "entry_point": "expensive_items", "tests": ["expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}],1)", "expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}, {'name': 'Item-3', 'price': 45.09}],2)", "expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}, {'name': 'Item-3', 'price': 45.09},{'name': 'Item-4', 'price': 22.75}],1)"]}
{"task_id": "MbppEval/586", "prompt": "def split_Arr(l, n):\n    '''\n    Write a python function to split a list at the nth eelment and add the first part to the end.\n    '''\n", "entry_point": "split_Arr", "tests": ["split_Arr([12,10,5,6,52,36],2)", "split_Arr([1,2,3,4],1)", "split_Arr([0,1,2,3,4,5,6,7],3)"]}
{"task_id": "MbppEval/587", "prompt": "def list_tuple(listx):\n    '''\n    Write a function to convert a list to a tuple.\n    '''\n", "entry_point": "list_tuple", "tests": ["list_tuple([5, 10, 7, 4, 15, 3])", "list_tuple([2, 4, 5, 6, 2, 3, 4, 4, 7])", "list_tuple([58,44,56])"]}
{"task_id": "MbppEval/588", "prompt": "def big_diff(nums):\n    '''\n    Write a python function to find the difference between largest and smallest value in a given list.\n    '''\n", "entry_point": "big_diff", "tests": ["big_diff([1,2,3,4])", "big_diff([4,5,12])", "big_diff([9,2,3])"]}
{"task_id": "MbppEval/589", "prompt": "def perfect_squares(a, b):\n    '''\n    Write a function to find perfect squares between two given numbers.\n    '''\n", "entry_point": "perfect_squares", "tests": ["perfect_squares(1,30)", "perfect_squares(50,100)", "perfect_squares(100,200)"]}
{"task_id": "MbppEval/590", "prompt": "import cmath\ndef polar_rect(x,y):\n    '''\n    Write a function to convert polar coordinates to rectangular coordinates.\n    '''\n", "entry_point": "polar_rect", "tests": ["polar_rect(3,4)", "polar_rect(4,7)", "polar_rect(15,17)"]}
{"task_id": "MbppEval/591", "prompt": "def swap_List(newList): \n    '''\n    Write a python function to interchange the first and last elements in a list.\n    '''\n", "entry_point": "swap_List", "tests": ["swap_List([12, 35, 9, 56, 24])", "swap_List([1, 2, 3])", "swap_List([4, 5, 6])"]}
{"task_id": "MbppEval/592", "prompt": "def binomial_Coeff(n,k): \n    '''\n    Write a python function to find the sum of the product of consecutive binomial co-efficients.\n    '''\n", "entry_point": "binomial_Coeff", "tests": ["sum_Of_product(3)", "sum_Of_product(4)", "sum_Of_product(1)"]}
{"task_id": "MbppEval/593", "prompt": "import re\ndef removezero_ip(ip):\n    '''\n    Write a function to remove leading zeroes from an ip address.\n    '''\n", "entry_point": "removezero_ip", "tests": ["removezero_ip(\"216.08.094.196\")", "removezero_ip(\"12.01.024\")", "removezero_ip(\"216.08.094.0196\")"]}
{"task_id": "MbppEval/594", "prompt": "def diff_even_odd(list1):\n    '''\n    Write a function to find the difference of the first even and first odd number of a given list.\n    '''\n", "entry_point": "diff_even_odd", "tests": ["diff_even_odd([1,3,5,7,4,1,6,8])", "diff_even_odd([1,2,3,4,5,6,7,8,9,10])", "diff_even_odd([1,5,7,9,10])"]}
{"task_id": "MbppEval/595", "prompt": "def min_Swaps(str1,str2) : \n    '''\n    Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    '''\n", "entry_point": "min_Swaps", "tests": ["min_Swaps(\"1101\",\"1110\")", "min_Swaps(\"111\",\"000\")", "min_Swaps(\"111\",\"110\")"]}
{"task_id": "MbppEval/596", "prompt": "import sys \ndef tuple_size(tuple_list):\n    '''\n    Write a function to find the size in bytes of the given tuple.\n    '''\n", "entry_point": "tuple_size", "tests": ["tuple_size((\"A\", 1, \"B\", 2, \"C\", 3) )", "tuple_size((1, \"Raju\", 2, \"Nikhil\", 3, \"Deepanshu\") )", "tuple_size(((1, \"Lion\"), ( 2, \"Tiger\"), (3, \"Fox\"), (4, \"Wolf\"))  )"]}
{"task_id": "MbppEval/597", "prompt": "def find_kth(arr1, arr2, k):\n    '''\n    Write a function to find kth element from the given two sorted arrays.\n    '''\n", "entry_point": "find_kth", "tests": ["find_kth([2, 3, 6, 7, 9], [1, 4, 8, 10], 5)", "find_kth([100, 112, 256, 349, 770], [72, 86, 113, 119, 265, 445, 892], 7)", "find_kth([3, 4, 7, 8, 10], [2, 5, 9, 11], 6)"]}
{"task_id": "MbppEval/598", "prompt": "def armstrong_number(number):\n    '''\n    Write a function to check whether the given number is armstrong or not.\n    '''\n", "entry_point": "armstrong_number", "tests": ["armstrong_number(153)", "armstrong_number(259)", "armstrong_number(4458)"]}
{"task_id": "MbppEval/599", "prompt": "def sum_average(number):\n    '''\n    Write a function to find sum and average of first n natural numbers.\n    '''\n", "entry_point": "sum_average", "tests": ["sum_average(10)", "sum_average(15)", "sum_average(20)"]}
{"task_id": "MbppEval/600", "prompt": "def is_Even(n) : \n    '''\n    Write a python function to check whether the given number is even or not.\n    '''\n", "entry_point": "is_Even", "tests": ["is_Even(1)", "is_Even(2)", "is_Even(3)"]}
{"task_id": "MbppEval/602", "prompt": "def first_repeated_char(str1):\n    '''\n    Write a python function to find the first repeated character in a given string.\n    '''\n", "entry_point": "first_repeated_char", "tests": ["first_repeated_char(\"abcabc\")", "first_repeated_char(\"abc\")", "first_repeated_char(\"123123\")"]}
{"task_id": "MbppEval/603", "prompt": "def get_ludic(n):\n    '''\n    Write a function to get all lucid numbers smaller than or equal to a given integer.\n    '''\n", "entry_point": "get_ludic", "tests": ["get_ludic(10)", "get_ludic(25)", "get_ludic(45)"]}
{"task_id": "MbppEval/604", "prompt": "def reverse_words(s):\n    '''\n    Write a function to reverse words seperated by spaces in a given string.\n    '''\n", "entry_point": "reverse_words", "tests": ["reverse_words(\"python program\")", "reverse_words(\"java language\")", "reverse_words(\"indian man\")"]}
{"task_id": "MbppEval/605", "prompt": "def prime_num(num):\n    '''\n    Write a function to check if the given integer is a prime number.\n    '''\n", "entry_point": "prime_num", "tests": ["prime_num(13)", "prime_num(7)", "prime_num(-1010)"]}
{"task_id": "MbppEval/606", "prompt": "import math\ndef radian_degree(degree):\n    '''\n    Write a function to convert degrees to radians.\n    '''\n", "entry_point": "radian_degree", "tests": ["radian_degree(90)", "radian_degree(60)", "radian_degree(120)"]}
{"task_id": "MbppEval/607", "prompt": "import re\n\ndef find_literals(text, pattern):\n    '''\n    Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.\n    '''\n", "entry_point": "find_literals", "tests": ["find_literals('The quick brown fox jumps over the lazy dog.', 'fox')", "find_literals('Its been a very crazy procedure right', 'crazy')", "find_literals('Hardest choices required strongest will', 'will')"]}
{"task_id": "MbppEval/608", "prompt": "def bell_Number(n): \n    '''\n    Write a python function to find nth bell number.\n    '''\n", "entry_point": "bell_Number", "tests": ["bell_Number(2)", "bell_Number(3)", "bell_Number(4)"]}
{"task_id": "MbppEval/610", "prompt": "def remove_kth_element(list1, L):\n    '''\n    Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.\n    '''\n", "entry_point": "remove_kth_element", "tests": ["remove_kth_element([1,1,2,3,4,4,5,1],3)", "remove_kth_element([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4],4)", "remove_kth_element([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10],5)"]}
{"task_id": "MbppEval/611", "prompt": "def max_of_nth(test_list, N):\n    '''\n    Write a function which given a matrix represented as a list of lists returns the max of the n'th column.\n    '''\n", "entry_point": "max_of_nth", "tests": ["max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2)", "max_of_nth([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1)", "max_of_nth([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1)"]}
{"task_id": "MbppEval/612", "prompt": "def merge(lst):  \n    '''\n    Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    '''\n", "entry_point": "merge", "tests": ["merge([['x', 'y'], ['a', 'b'], ['m', 'n']])", "merge([[1, 2], [3, 4], [5, 6], [7, 8]])", "merge([['x', 'y','z' ], ['a', 'b','c'], ['m', 'n','o']])"]}
{"task_id": "MbppEval/614", "prompt": "def cummulative_sum(test_list):\n    '''\n    Write a function to find the cumulative sum of all the values that are present in the given tuple list.\n    '''\n", "entry_point": "cummulative_sum", "tests": ["cummulative_sum([(1, 3), (5, 6, 7), (2, 6)])", "cummulative_sum([(2, 4), (6, 7, 8), (3, 7)])", "cummulative_sum([(3, 5), (7, 8, 9), (4, 8)])"]}
{"task_id": "MbppEval/615", "prompt": "def average_tuple(nums):\n    '''\n    Write a function which takes a tuple of tuples and returns the average value for each tuple as a list.\n    '''\n", "entry_point": "average_tuple", "tests": ["average_tuple(((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4)))", "average_tuple(((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3)))", "average_tuple( ((100, 100, 100, 120), (300, 450, 560, 450), (810, 800, 390, 320), (10, 20, 30, 40)))"]}
{"task_id": "MbppEval/616", "prompt": "def tuple_modulo(test_tup1, test_tup2):\n    '''\n    Write a function which takes two tuples of the same length and performs the element wise modulo.\n    '''\n", "entry_point": "tuple_modulo", "tests": ["tuple_modulo((10, 4, 5, 6), (5, 6, 7, 5))", "tuple_modulo((11, 5, 6, 7), (6, 7, 8, 6))", "tuple_modulo((12, 6, 7, 8), (7, 8, 9, 7))"]}
{"task_id": "MbppEval/617", "prompt": "def min_Jumps(steps, d): \n    '''\n    Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.\n    '''\n", "entry_point": "min_Jumps", "tests": ["min_Jumps((3,4),11)", "min_Jumps((3,4),0)", "min_Jumps((11,14),11)"]}
{"task_id": "MbppEval/618", "prompt": "def div_list(nums1,nums2):\n    '''\n    Write a function to divide two lists element wise.\n    '''\n", "entry_point": "div_list", "tests": ["div_list([4,5,6],[1, 2, 3])", "div_list([3,2],[1,4])", "div_list([90,120],[50,70])"]}
{"task_id": "MbppEval/619", "prompt": "def move_num(test_str):\n    '''\n    Write a function to move all the numbers to the end of the given string.\n    '''\n", "entry_point": "move_num", "tests": ["move_num('I1love143you55three3000thousand')", "move_num('Avengers124Assemble')", "move_num('Its11our12path13to14see15things16do17things')"]}
{"task_id": "MbppEval/620", "prompt": "def largest_subset(a):\n    '''\n    Write a function to find the size of the largest subset of a list of numbers so that every pair is divisible.\n    '''\n", "entry_point": "largest_subset", "tests": ["largest_subset([ 1, 3, 6, 13, 17, 18 ])", "largest_subset([10, 5, 3, 15, 20])", "largest_subset([18, 1, 3, 6, 13, 17])"]}
{"task_id": "MbppEval/622", "prompt": "def get_median(arr1, arr2, n):\n    '''\n    Write a function to find the median of two sorted lists of same size.\n    '''\n", "entry_point": "get_median", "tests": ["get_median([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5)", "get_median([2, 4, 8, 9], [7, 13, 19, 28], 4)", "get_median([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6)"]}
{"task_id": "MbppEval/623", "prompt": "def nth_nums(nums,n):\n    '''\n    Write a function to compute the n-th power of each number in a list.\n    '''\n", "entry_point": "nth_nums", "tests": ["nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)", "nth_nums([10,20,30],3)", "nth_nums([12,15],5)"]}
{"task_id": "MbppEval/624", "prompt": "def is_upper(string):\n    '''\n    Write a python function to convert a given string to uppercase.\n    '''\n", "entry_point": "is_upper", "tests": ["is_upper(\"person\")", "is_upper(\"final\")", "is_upper(\"Valid\")"]}
{"task_id": "MbppEval/625", "prompt": "def swap_List(newList): \n    '''\n    Write a python function to interchange the first and last element in a given list.\n    '''\n", "entry_point": "swap_List", "tests": ["swap_List([1,2,3])", "swap_List([1,2,3,4,4])", "swap_List([4,5,6])"]}
{"task_id": "MbppEval/626", "prompt": "def triangle_area(r) :  \n    '''\n    Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\n    '''\n", "entry_point": "triangle_area", "tests": ["triangle_area(-1)", "triangle_area(0)", "triangle_area(2)"]}
{"task_id": "MbppEval/627", "prompt": "def find_First_Missing(array,start=0,end=None):\n    '''\n    Write a python function to find the smallest missing number from a sorted list of natural numbers.\n    '''\n", "entry_point": "find_First_Missing", "tests": ["find_First_Missing([0,1,2,3])", "find_First_Missing([0,1,2,6,9])", "find_First_Missing([2,3,5,8,9])"]}
{"task_id": "MbppEval/628", "prompt": "def replace_spaces(string):\n    '''\n    Write a function to replace all spaces in the given string with '%20'.\n    '''\n", "entry_point": "replace_spaces", "tests": ["replace_spaces(\"My Name is Dawood\")", "replace_spaces(\"I am a Programmer\")", "replace_spaces(\"I love Coding\")"]}
{"task_id": "MbppEval/629", "prompt": "def Split(list): \n    '''\n    Write a python function to find even numbers from a list of numbers.\n    '''\n", "entry_point": "Split", "tests": ["Split([1,2,3,4,5])", "Split([4,5,6,7,8,0,1])", "Split ([8,12,15,19])"]}
{"task_id": "MbppEval/630", "prompt": "def adjac(ele, sub = []): \n    '''\n    Write a function to extract all the adjacent coordinates of the given coordinate tuple.\n    '''\n", "entry_point": "adjac", "tests": ["get_coordinates((3, 4))", "get_coordinates((4, 5))", "get_coordinates((5, 6))"]}
{"task_id": "MbppEval/631", "prompt": "def replace_spaces(text):\n    '''\n    Write a function to replace whitespaces with an underscore and vice versa in a given string.\n    '''\n", "entry_point": "replace_spaces", "tests": ["replace_spaces('Jumanji The Jungle')", "replace_spaces('The_Avengers')", "replace_spaces('Fast and Furious')"]}
{"task_id": "MbppEval/632", "prompt": "def move_zero(num_list):\n    '''\n    Write a python function to move all zeroes to the end of the given list.\n    '''\n", "entry_point": "move_zero", "tests": ["move_zero([1,0,2,0,3,4])", "move_zero([2,3,2,0,0,4,0,5,0])", "move_zero([0,1,0,1,1])"]}
{"task_id": "MbppEval/633", "prompt": "def pair_xor_Sum(arr,n) : \n    '''\n    Write a python function to find the sum of xor of all pairs of numbers in the given list.\n    '''\n", "entry_point": "pair_xor_Sum", "tests": ["pair_xor_Sum([5,9,7,6],4)", "pair_xor_Sum([7,3,5],3)", "pair_xor_Sum([7,3],2)"]}
{"task_id": "MbppEval/635", "prompt": "import heapq as hq\ndef heap_sort(iterable):\n    '''\n    Write a function to sort the given list.\n    '''\n", "entry_point": "heap_sort", "tests": ["heap_sort([1, 3, 5, 7, 9, 2, 4, 6, 8, 0])", "heap_sort([25, 35, 22, 85, 14, 65, 75, 25, 58])", "heap_sort( [7, 1, 9, 5])"]}
{"task_id": "MbppEval/637", "prompt": "def noprofit_noloss(actual_cost,sale_amount): \n    '''\n    Write a function to check whether the given amount has no profit and no loss\n    '''\n", "entry_point": "noprofit_noloss", "tests": ["noprofit_noloss(1500,1200)", "noprofit_noloss(100,100)", "noprofit_noloss(2000,5000)"]}
{"task_id": "MbppEval/638", "prompt": "import math\ndef wind_chill(v,t):\n    '''\n    Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\n    '''\n", "entry_point": "wind_chill", "tests": ["wind_chill(120,35)", "wind_chill(40,20)", "wind_chill(10,8)"]}
{"task_id": "MbppEval/639", "prompt": "def sample_nam(sample_names):\n    '''\n    Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\n    '''\n", "entry_point": "sample_nam", "tests": ["sample_nam(['sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith'])", "sample_nam([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"])", "sample_nam([\"abcd\", \"Python\", \"abba\", \"aba\"])"]}
{"task_id": "MbppEval/640", "prompt": "import re\ndef remove_parenthesis(items):\n    '''\n    Write a function to remove the parenthesis and what is inbetween them from a string.\n    '''\n", "entry_point": "remove_parenthesis", "tests": ["remove_parenthesis([\"python (chrome)\"])", "remove_parenthesis([\"string(.abc)\"])", "remove_parenthesis([\"alpha(num)\"])"]}
{"task_id": "MbppEval/641", "prompt": "def is_nonagonal(n): \n    '''\n    Write a function to find the nth nonagonal number.\n    '''\n", "entry_point": "is_nonagonal", "tests": ["is_nonagonal(10)", "is_nonagonal(15)", "is_nonagonal(18)"]}
{"task_id": "MbppEval/643", "prompt": "import re\ndef text_match_wordz_middle(text):\n    '''\n    Write a function that checks if a strings contains 'z', except at the start and end of the word.\n    '''\n", "entry_point": "text_match_wordz_middle", "tests": ["text_match_wordz_middle(\"pythonzabc.\")", "text_match_wordz_middle(\"zxyabc.\")", "text_match_wordz_middle(\"  lang  .\")"]}
{"task_id": "MbppEval/644", "prompt": "def reverse_Array_Upto_K(input, k): \n    '''\n    Write a python function to reverse an array upto a given position.\n    '''\n", "entry_point": "reverse_Array_Upto_K", "tests": ["reverse_Array_Upto_K([1, 2, 3, 4, 5, 6],4)", "reverse_Array_Upto_K([4, 5, 6, 7], 2)", "reverse_Array_Upto_K([9, 8, 7, 6, 5],3)"]}
{"task_id": "MbppEval/720", "prompt": "def add_dict_to_tuple(test_tup, test_dict):\n    '''\n    Write a function to add a dictionary to the tuple. The output should be a tuple.\n    '''\n", "entry_point": "add_dict_to_tuple", "tests": ["add_dict_to_tuple((4, 5, 6), {\"MSAM\" : 1, \"is\" : 2, \"best\" : 3} )", "add_dict_to_tuple((1, 2, 3), {\"UTS\" : 2, \"is\" : 3, \"Worst\" : 4} )", "add_dict_to_tuple((8, 9, 10), {\"POS\" : 3, \"is\" : 4, \"Okay\" : 5} )"]}
{"task_id": "MbppEval/721", "prompt": "def maxAverageOfPath(cost):\n    '''\n    Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.\n    '''\n", "entry_point": "maxAverageOfPath", "tests": ["maxAverageOfPath([[1, 2, 3], [6, 5, 4], [7, 3, 9]])", "maxAverageOfPath([[2, 3, 4], [7, 6, 5], [8, 4, 10]])", "maxAverageOfPath([[3, 4, 5], [8, 7, 6], [9, 5, 11]])", "maxAverageOfPath([[1, 2, 3], [4, 5, 6], [7, 8, 9]])"]}
{"task_id": "MbppEval/722", "prompt": "def filter_data(students,h,w):\n    '''\n    The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.\n    '''\n", "entry_point": "filter_data", "tests": ["filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)", "filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},5.9,67)", "filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},5.7,64)"]}
{"task_id": "MbppEval/723", "prompt": "from operator import eq\ndef count_same_pair(nums1, nums2):\n    '''\n    The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.\n    '''\n", "entry_point": "count_same_pair", "tests": ["count_same_pair([1, 2, 3, 4, 5, 6, 7, 8],[2, 2, 3, 1, 2, 6, 7, 9])", "count_same_pair([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8],[2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])", "count_same_pair([2, 4, -6, -9, 11, -12, 14, -5, 17],[2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])", "count_same_pair([0, 1, 1, 2],[0, 1, 2, 2])"]}
{"task_id": "MbppEval/724", "prompt": "def power_base_sum(base, power):\n    '''\n    Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n    '''\n", "entry_point": "power_base_sum", "tests": ["power_base_sum(2,100)", "power_base_sum(8,10)", "power_base_sum(8,15)", "power_base_sum(3,3)"]}
{"task_id": "MbppEval/725", "prompt": "import re\ndef extract_quotation(text1):\n    '''\n    Write a function to extract values between quotation marks \" \" of the given string.\n    '''\n", "entry_point": "extract_quotation", "tests": ["extract_quotation('Cortex \"A53\" Based \"multi\" tasking \"Processor\"')", "extract_quotation('Cast your \"favorite\" entertainment \"apps\"')", "extract_quotation('Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support')", "extract_quotation(\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")"]}
{"task_id": "MbppEval/726", "prompt": "def multiply_elements(test_tup):\n    '''\n    Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.\n    '''\n", "entry_point": "multiply_elements", "tests": ["multiply_elements((1, 5, 7, 8, 10))", "multiply_elements((2, 4, 5, 6, 7))", "multiply_elements((12, 13, 14, 9, 15))", "multiply_elements((12,))"]}
{"task_id": "MbppEval/728", "prompt": "def sum_list(lst1,lst2):\n    '''\n    Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\n    '''\n", "entry_point": "sum_list", "tests": ["sum_list([10,20,30],[15,25,35])", "sum_list([1,2,3],[5,6,7])", "sum_list([15,20,30],[15,45,75])"]}
{"task_id": "MbppEval/730", "prompt": "from itertools import groupby\ndef consecutive_duplicates(nums):\n    '''\n    Write a function to remove consecutive duplicates of a given list.\n    '''\n", "entry_point": "consecutive_duplicates", "tests": ["consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ])", "consecutive_duplicates([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10])", "consecutive_duplicates(['a', 'a', 'b', 'c', 'd', 'd'])", "consecutive_duplicates(['a', 'a', 'b', 'c', 'd', 'd', 'a', 'a'])"]}
{"task_id": "MbppEval/731", "prompt": "import math\ndef lateralsurface_cone(r,h):\n    '''\n    Write a function to find the lateral surface area of a cone given radius r and the height h.\n    '''\n", "entry_point": "lateralsurface_cone", "tests": ["lateralsurface_cone(5,12)", "lateralsurface_cone(10,15)", "lateralsurface_cone(19,17)"]}
{"task_id": "MbppEval/732", "prompt": "import re\ndef replace_specialchar(text):\n    '''\n    Write a function to replace all occurrences of spaces, commas, or dots with a colon.\n    '''\n", "entry_point": "replace_specialchar", "tests": ["replace_specialchar('Python language, Programming language.')", "replace_specialchar('a b c,d e f')", "replace_specialchar('ram reshma,ram rahim')"]}
{"task_id": "MbppEval/733", "prompt": "def find_first_occurrence(A, x):\n    '''\n    Write a function to find the index of the first occurrence of a given number in a sorted array.\n    '''\n", "entry_point": "find_first_occurrence", "tests": ["find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5)", "find_first_occurrence([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5)", "find_first_occurrence([2, 4, 1, 5, 6, 6, 8, 9, 9, 9], 6)"]}
{"task_id": "MbppEval/734", "prompt": "def sum_Of_Subarray_Prod(arr):\n    '''\n    Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\n    '''\n", "entry_point": "sum_Of_Subarray_Prod", "tests": ["sum_Of_Subarray_Prod([1,2,3])", "sum_Of_Subarray_Prod([1,2])", "sum_Of_Subarray_Prod([1,2,3,4])"]}
{"task_id": "MbppEval/735", "prompt": "def set_middle_bits(n):  \n    '''\n    Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\n    '''\n", "entry_point": "set_middle_bits", "tests": ["toggle_middle_bits(9)", "toggle_middle_bits(10)", "toggle_middle_bits(11)", "toggle_middle_bits(0b1000001)", "toggle_middle_bits(0b1001101)"]}
{"task_id": "MbppEval/736", "prompt": "import bisect\ndef left_insertion(a, x):\n    '''\n    Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\n    '''\n", "entry_point": "left_insertion", "tests": ["left_insertion([1,2,4,5],6)", "left_insertion([1,2,4,5],3)", "left_insertion([1,2,4,5],7)"]}
{"task_id": "MbppEval/737", "prompt": "import re \nregex = '^[aeiouAEIOU][A-Za-z0-9_]*'\ndef check_str(string): \n    '''\n    Write a function to check whether the given string is starting with a vowel or not using regex.\n    '''\n", "entry_point": "check_str", "tests": ["check_str(\"annie\")", "not check_str(\"dawood\")", "check_str(\"Else\")"]}
{"task_id": "MbppEval/738", "prompt": "def geometric_sum(n):\n    '''\n    Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\n    '''\n", "entry_point": "geometric_sum", "tests": ["geometric_sum(7)", "geometric_sum(4)", "geometric_sum(8)"]}
{"task_id": "MbppEval/739", "prompt": "import math \ndef find_Index(n): \n    '''\n    Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n    '''\n", "entry_point": "find_Index", "tests": ["find_Index(2)", "find_Index(3)", "find_Index(4)"]}
{"task_id": "MbppEval/740", "prompt": "def tuple_to_dict(test_tup):\n    '''\n    Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\n    '''\n", "entry_point": "tuple_to_dict", "tests": ["tuple_to_dict((1, 5, 7, 10, 13, 5))", "tuple_to_dict((1, 2, 3, 4, 5, 6))", "tuple_to_dict((7, 8, 9, 10, 11, 12))"]}
{"task_id": "MbppEval/741", "prompt": "def all_Characters_Same(s) :\n    '''\n    Write a python function to check whether all the characters are same or not.\n    '''\n", "entry_point": "all_Characters_Same", "tests": ["all_Characters_Same(\"python\")", "all_Characters_Same(\"aaa\")", "all_Characters_Same(\"data\")"]}
{"task_id": "MbppEval/742", "prompt": "import math\ndef area_tetrahedron(side):\n    '''\n    Write a function to caluclate the area of a tetrahedron.\n    '''\n", "entry_point": "area_tetrahedron", "tests": ["area_tetrahedron(3)", "area_tetrahedron(20)", "area_tetrahedron(10)"]}
{"task_id": "MbppEval/743", "prompt": "def rotate_right(list, m):\n    '''\n    Write a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/\n    '''\n", "entry_point": "rotate_right", "tests": ["rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],3)", "rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],2)", "rotate_right([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],5)"]}
{"task_id": "MbppEval/744", "prompt": "def check_none(test_tup):\n    '''\n    Write a function to check if the given tuple has any none value or not.\n    '''\n", "entry_point": "check_none", "tests": ["check_none((10, 4, 5, 6, None))", "check_none((7, 8, 9, 11, 14))", "check_none((1, 2, 3, 4, None))"]}
{"task_id": "MbppEval/745", "prompt": "def divisible_by_digits(startnum, endnum):\n    '''\n    Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    '''\n", "entry_point": "divisible_by_digits", "tests": ["divisible_by_digits(1,22)", "divisible_by_digits(1,15)", "divisible_by_digits(20,25)"]}
{"task_id": "MbppEval/746", "prompt": "import math\ndef sector_area(r,a):\n    '''\n    Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n    '''\n", "entry_point": "sector_area", "tests": ["sector_area(4,45)", "sector_area(9,45)", "sector_area(9,361)"]}
{"task_id": "MbppEval/747", "prompt": "def lcs_of_three(X, Y, Z): \n    '''\n    Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n    '''\n", "entry_point": "lcs_of_three", "tests": ["lcs_of_three('AGGT12', '12TXAYB', '12XBA')", "lcs_of_three('Reels', 'Reelsfor', 'ReelsforReels')", "lcs_of_three('abcd1e2', 'bc12ea', 'bd1ea')"]}
{"task_id": "MbppEval/748", "prompt": "import re\ndef capital_words_spaces(str1):\n    '''\n    Write a function to put spaces between words starting with capital letters in a given string.\n    '''\n", "entry_point": "capital_words_spaces", "tests": ["capital_words_spaces(\"Python\")", "capital_words_spaces(\"PythonProgrammingExamples\")", "capital_words_spaces(\"GetReadyToBeCodingFreak\")"]}
{"task_id": "MbppEval/749", "prompt": "def sort_numeric_strings(nums_str):\n    '''\n    Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\n    '''\n", "entry_point": "sort_numeric_strings", "tests": ["sort_numeric_strings( ['4','12','45','7','0','100','200','-12','-500'])", "sort_numeric_strings(['2','3','8','4','7','9','8','2','6','5','1','6','1','2','3','4','6','9','1','2'])", "sort_numeric_strings(['1','3','5','7','1', '3','13', '15', '17','5', '7 ','9','1', '11'])"]}
{"task_id": "MbppEval/750", "prompt": "def add_tuple(test_list, test_tup):\n    '''\n    Write a function to add the given tuple to the given list.\n    '''\n", "entry_point": "add_tuple", "tests": ["add_tuple([5, 6, 7], (9, 10))", "add_tuple([6, 7, 8], (10, 11))", "add_tuple([7, 8, 9], (11, 12))"]}
{"task_id": "MbppEval/751", "prompt": "def check_min_heap_helper(arr, i):\n    '''\n    Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    '''\n", "entry_point": "check_min_heap_helper", "tests": ["check_min_heap([1, 2, 3, 4, 5, 6])", "check_min_heap([2, 3, 4, 5, 10, 15])", "check_min_heap([2, 10, 4, 5, 3, 15])"]}
{"task_id": "MbppEval/752", "prompt": "def jacobsthal_num(n): \n    '''\n    Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\n    '''\n", "entry_point": "jacobsthal_num", "tests": ["jacobsthal_num(5)", "jacobsthal_num(2)", "jacobsthal_num(4)", "jacobsthal_num(13)"]}
{"task_id": "MbppEval/753", "prompt": "def min_k(test_list, K):\n    '''\n    Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    '''\n", "entry_point": "min_k", "tests": ["min_k([('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)], 2)", "min_k([('Sanjeev', 11), ('Angat', 5), ('Akash', 3), ('Nepin', 9)], 3)", "min_k([('tanmay', 14), ('Amer', 11), ('Ayesha', 9), ('SKD', 16)], 1)"]}
{"task_id": "MbppEval/754", "prompt": "def extract_index_list(l1, l2, l3):\n    '''\n    We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n    '''\n", "entry_point": "extract_index_list", "tests": ["extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7])", "extract_index_list([1, 1, 3, 4, 5, 6, 7],[0, 1, 2, 3, 4, 6, 5],[0, 1, 2, 3, 4, 6, 7])", "extract_index_list([1, 1, 3, 4, 6, 5, 6],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7])", "extract_index_list([1, 2, 3, 4, 6, 6, 6],[0, 1, 2, 3, 4, 5, 7],[0, 1, 2, 3, 4, 5, 7])"]}
{"task_id": "MbppEval/755", "prompt": "def second_smallest(numbers):\n    '''\n    Write a function to find the second smallest number in a list.\n    '''\n", "entry_point": "second_smallest", "tests": ["second_smallest([1, 2, -8, -2, 0, -2])", "second_smallest([1, 1, -0.5, 0, 2, -2, -2])", "second_smallest([2,2])", "second_smallest([2,2,2])"]}
{"task_id": "MbppEval/756", "prompt": "import re\ndef text_match_zero_one(text):\n    '''\n    Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/python-exercises/re/python-re-exercise-3.php\n    '''\n", "entry_point": "text_match_zero_one", "tests": ["text_match_zero_one(\"ac\")", "text_match_zero_one(\"dc\")", "text_match_zero_one(\"abbbba\")", "text_match_zero_one(\"dsabbbba\")", "text_match_zero_one(\"asbbbba\")", "text_match_zero_one(\"abaaa\")"]}
{"task_id": "MbppEval/757", "prompt": "def count_reverse_pairs(test_list):\n    '''\n    Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\n    '''\n", "entry_point": "count_reverse_pairs", "tests": ["count_reverse_pairs([\"julia\", \"best\", \"tseb\", \"for\", \"ailuj\"])", "count_reverse_pairs([\"geeks\", \"best\", \"for\", \"skeeg\"])", "count_reverse_pairs([\"makes\", \"best\", \"sekam\", \"for\", \"rof\"])"]}
{"task_id": "MbppEval/758", "prompt": "def unique_sublists(list1):\n    '''\n    Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.\n    '''\n", "entry_point": "unique_sublists", "tests": ["unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]] )", "unique_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']])", "unique_sublists([[10, 20, 30, 40], [60, 70, 50, 50], [90, 100, 200]])", "unique_sublists([['john']])"]}
{"task_id": "MbppEval/759", "prompt": "def is_decimal(num):\n    '''\n    Write a function to check whether a given string is a decimal number with a precision of 2.\n    '''\n", "entry_point": "is_decimal", "tests": ["is_decimal('123.11')", "is_decimal('e666.86')", "is_decimal('3.124587')", "is_decimal('1.11')", "is_decimal('1.1.11')"]}
{"task_id": "MbppEval/760", "prompt": "def unique_Element(arr):\n    '''\n    Write a python function to check whether a list of numbers contains only one distinct element or not.\n    '''\n", "entry_point": "unique_Element", "tests": ["unique_Element([1,1,1])", "unique_Element([1,2,1,2])", "unique_Element([1,2,3,4,5])"]}
{"task_id": "MbppEval/762", "prompt": "def check_monthnumber_number(monthnum3):\n    '''\n    Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\n    '''\n", "entry_point": "check_monthnumber_number", "tests": ["check_monthnumber_number(6)", "check_monthnumber_number(2)", "check_monthnumber_number(12)"]}
{"task_id": "MbppEval/763", "prompt": "def find_min_diff(arr,n): \n    '''\n    Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\n    '''\n", "entry_point": "find_min_diff", "tests": ["find_min_diff((1,5,3,19,18,25),6)", "find_min_diff((4,3,2,6),4)", "find_min_diff((30,5,20,9),4)"]}
{"task_id": "MbppEval/764", "prompt": "def number_ctr(str):\n    '''\n    Write a python function to count number of digits in a given string.\n    '''\n", "entry_point": "number_ctr", "tests": ["number_ctr('program2bedone')", "number_ctr('3wonders')", "number_ctr('123')", "number_ctr('3wond-1ers2')"]}
{"task_id": "MbppEval/765", "prompt": "import math \ndef is_polite(n): \n    '''\n    Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\n    '''\n", "entry_point": "is_polite", "tests": ["is_polite(7)", "is_polite(4)", "is_polite(9)"]}
{"task_id": "MbppEval/766", "prompt": "def pair_wise(l1):\n    '''\n    Write a function to return a list of all pairs of consecutive items in a given list.\n    '''\n", "entry_point": "pair_wise", "tests": ["pair_wise([1,1,2,3,3,4,4,5])", "pair_wise([1,5,7,9,10])", "pair_wise([5,1,9,7,10])", "pair_wise([1,2,3,4,5,6,7,8,9,10])"]}
{"task_id": "MbppEval/767", "prompt": "def get_pairs_count(arr, sum):\n    '''\n    Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    '''\n", "entry_point": "get_pairs_count", "tests": ["get_pairs_count([1,1,1,1],2)", "get_pairs_count([1,5,7,-1,5],6)", "get_pairs_count([1,-2,3],1)", "get_pairs_count([-1,-2,3],-3)"]}
{"task_id": "MbppEval/769", "prompt": "def Diff(li1,li2):\n    '''\n    Write a python function to get the difference between two lists.\n    '''\n", "entry_point": "Diff", "tests": ["(Diff([10, 15, 20, 25, 30, 35, 40], [25, 40, 35]))", "(Diff([1,2,3,4,5], [6,7,1]))", "(Diff([1,2,3], [6,7,1]))"]}
{"task_id": "MbppEval/770", "prompt": "def odd_num_sum(n) : \n    '''\n    Write a python function to find the sum of fourth power of first n odd natural numbers.\n    '''\n", "entry_point": "odd_num_sum", "tests": ["odd_num_sum(2)", "odd_num_sum(3)", "odd_num_sum(4)"]}
{"task_id": "MbppEval/771", "prompt": "from collections import deque\ndef check_expression(exp):\n    '''\n    Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\n    '''\n", "entry_point": "check_expression", "tests": ["check_expression(\"{()}[{}]\")", "check_expression(\"{()}[{]\")", "check_expression(\"{()}[{}][]({})\")"]}
{"task_id": "MbppEval/772", "prompt": "def remove_length(test_str, K):\n    '''\n    Write a function to remove all the words with k length in the given string.\n    '''\n", "entry_point": "remove_length", "tests": ["remove_length('The person is most value tet', 3)", "remove_length('If you told me about this ok', 4)", "remove_length('Forces of darkeness is come into the play', 4)"]}
{"task_id": "MbppEval/773", "prompt": "import re\ndef occurance_substring(text,pattern):\n    '''\n    Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\n    '''\n", "entry_point": "occurance_substring", "tests": ["occurance_substring('python programming, python language','python')", "occurance_substring('python programming,programming language','programming')", "occurance_substring('python programming,programming language','language')", "occurance_substring('c++ programming, c++ language','python')"]}
{"task_id": "MbppEval/775", "prompt": "def odd_position(nums):\n    '''\n    Write a python function to check whether every odd index contains odd numbers of a given list.\n    '''\n", "entry_point": "odd_position", "tests": ["odd_position([2,1,4,3,6,7,6,3])", "odd_position([4,1,2])", "odd_position([1,2,3])"]}
{"task_id": "MbppEval/776", "prompt": "def count_vowels(test_str):\n    '''\n    Write a function to count those characters which have vowels as their neighbors in the given string.\n    '''\n", "entry_point": "count_vowels", "tests": ["count_vowels('bestinstareels')", "count_vowels('partofthejourneyistheend')", "count_vowels('amazonprime')"]}
{"task_id": "MbppEval/777", "prompt": "def find_sum(arr): \n    '''\n    Write a python function to find the sum of non-repeated elements in a given list.\n    '''\n", "entry_point": "find_sum", "tests": ["find_sum([1,2,3,1,1,4,5,6])", "find_sum([1,10,9,4,2,10,10,45,4])", "find_sum([12,10,9,45,2,10,10,45,10])"]}
{"task_id": "MbppEval/778", "prompt": "from itertools import groupby\ndef pack_consecutive_duplicates(list1):\n    '''\n    Write a function to pack consecutive duplicates of a given list elements into sublists.\n    '''\n", "entry_point": "pack_consecutive_duplicates", "tests": ["pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])", "pack_consecutive_duplicates([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10])", "pack_consecutive_duplicates(['a', 'a', 'b', 'c', 'd', 'd'])"]}
{"task_id": "MbppEval/779", "prompt": "def unique_sublists(list1):\n    '''\n    Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.\n    '''\n", "entry_point": "unique_sublists", "tests": ["unique_sublists([[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]])", "unique_sublists([['green', 'orange'], ['black'], ['green', 'orange'], ['white']])", "unique_sublists([[1, 2], [3, 4], [4, 5], [6, 7]])"]}
{"task_id": "MbppEval/780", "prompt": "from itertools import combinations \ndef find_combinations(test_list):\n    '''\n    Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/\n    '''\n", "entry_point": "find_combinations", "tests": ["find_combinations([(2, 4), (6, 7), (5, 1), (6, 10)])", "find_combinations([(3, 5), (7, 8), (6, 2), (7, 11)])", "find_combinations([(4, 6), (8, 9), (7, 3), (8, 12)])"]}
{"task_id": "MbppEval/781", "prompt": "import math \ndef count_divisors(n) : \n    '''\n    Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\n    '''\n", "entry_point": "count_divisors", "tests": ["count_divisors(10)", "not count_divisors(100)", "count_divisors(125)"]}
{"task_id": "MbppEval/782", "prompt": "def odd_length_sum(arr):\n    '''\n    Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    '''\n", "entry_point": "odd_length_sum", "tests": ["odd_length_sum([1,2,4])", "odd_length_sum([1,2,1,2])", "odd_length_sum([1,7])"]}
{"task_id": "MbppEval/783", "prompt": "def rgb_to_hsv(r, g, b):\n    '''\n    Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\n    '''\n", "entry_point": "rgb_to_hsv", "tests": ["rgb_to_hsv(255, 255, 255)", "rgb_to_hsv(0, 215, 0)", "rgb_to_hsv(10, 215, 110)"]}
{"task_id": "MbppEval/784", "prompt": "def mul_even_odd(list1):\n    '''\n    Write a function to find the product of first even and odd number of a given list.\n    '''\n", "entry_point": "mul_even_odd", "tests": ["mul_even_odd([1,3,5,7,4,1,6,8])", "mul_even_odd([1,2,3,4,5,6,7,8,9,10])", "mul_even_odd([1,5,7,9,10])"]}
{"task_id": "MbppEval/785", "prompt": "def tuple_str_int(test_str):\n    '''\n    Write a function to convert tuple string to integer tuple.\n    '''\n", "entry_point": "tuple_str_int", "tests": ["tuple_str_int(\"(7, 8, 9)\")", "tuple_str_int(\"(1, 2, 3)\")", "tuple_str_int(\"(4, 5, 6)\")", "tuple_str_int(\"(7, 81, 19)\")"]}
{"task_id": "MbppEval/786", "prompt": "import bisect\ndef right_insertion(a, x):\n    '''\n    Write a function to locate the right insertion point for a specified value in sorted order.\n    '''\n", "entry_point": "right_insertion", "tests": ["right_insertion([1,2,4,5],6)", "right_insertion([1,2,4,5],3)", "right_insertion([1,2,4,5],7)"]}
{"task_id": "MbppEval/787", "prompt": "import re\ndef text_match_three(text):\n    '''\n    Write a function that matches a string that has an a followed by three 'b'.\n    '''\n", "entry_point": "text_match_three", "tests": ["not text_match_three(\"ac\")", "not text_match_three(\"dc\")", "text_match_three(\"abbbba\")", "text_match_three(\"caacabbbba\")"]}
{"task_id": "MbppEval/788", "prompt": "def new_tuple(test_list, test_str):\n    '''\n    Write a function to create a new tuple from the given string and list.\n    '''\n", "entry_point": "new_tuple", "tests": ["new_tuple([\"WEB\", \"is\"], \"best\")", "new_tuple([\"We\", \"are\"], \"Developers\")", "new_tuple([\"Part\", \"is\"], \"Wrong\")"]}
{"task_id": "MbppEval/790", "prompt": "def even_position(nums):\n    '''\n    Write a python function to check whether every even index contains even numbers of a given list.\n    '''\n", "entry_point": "even_position", "tests": ["even_position([3,2,1])", "even_position([1,2,3])", "even_position([2,1,4])"]}
{"task_id": "MbppEval/791", "prompt": "def remove_nested(test_tup):\n    '''\n    Write a function to remove tuples from the given tuple.\n    '''\n", "entry_point": "remove_nested", "tests": ["remove_nested((1, 5, 7, (4, 6), 10))", "remove_nested((2, 6, 8, (5, 7), 11))", "remove_nested((3, 7, 9, (6, 8), 12))", "remove_nested((3, 7, 9, (6, 8), (5,12), 12))"]}
{"task_id": "MbppEval/792", "prompt": "def count_list(input_list): \n    '''\n    Write a python function to count the number of lists in a given number of lists.\n    '''\n", "entry_point": "count_list", "tests": ["count_list([[1, 3], [5, 7], [9, 11], [13, 15, 17]])", "count_list([[1,2],[2,3],[4,5]])", "count_list([[1,0],[2,0]])"]}
{"task_id": "MbppEval/793", "prompt": "def last(arr,x):\n    '''\n    Write a python function to find the last position of an element in a sorted array.\n    '''\n", "entry_point": "last", "tests": ["last([1,2,3],1)", "last([1,1,1,2,3,4],1)", "last([2,3,2,3,6,8,9],3)"]}
{"task_id": "MbppEval/794", "prompt": "import re\ndef text_starta_endb(text):\n    '''\n    Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\n    '''\n", "entry_point": "text_starta_endb", "tests": ["text_starta_endb(\"aabbbb\")", "not text_starta_endb(\"aabAbbbc\")", "not text_starta_endb(\"accddbbjjj\")"]}
{"task_id": "MbppEval/796", "prompt": "def return_sum(dict):\n    '''\n    Write function to find the sum of all items in the given dictionary.\n    '''\n", "entry_point": "return_sum", "tests": ["return_sum({'a': 100, 'b':200, 'c':300})", "return_sum({'a': 25, 'b':18, 'c':45})", "return_sum({'a': 36, 'b':39, 'c':49})"]}
{"task_id": "MbppEval/797", "prompt": "def sum_odd(n): \n    '''\n    Write a python function to find the sum of all odd natural numbers within the range l and r.\n    '''\n", "entry_point": "sum_odd", "tests": ["sum_in_range(2,5)", "sum_in_range(5,7)", "sum_in_range(7,13)"]}
{"task_id": "MbppEval/798", "prompt": "def _sum(arr):  \n    '''\n    Write a python function to find the sum of an array.\n    '''\n", "entry_point": "_sum", "tests": ["_sum([1, 2, 3])", "_sum([15, 12, 13, 10])", "_sum([0, 1, 2])"]}
{"task_id": "MbppEval/799", "prompt": "def left_rotate(n,d):   \n    '''\n    Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\n    '''\n", "entry_point": "left_rotate", "tests": ["left_rotate(16,2)", "left_rotate(10,2)", "left_rotate(99,3)", "left_rotate(99,3)", "left_rotate(0b0001,3)", "left_rotate(0b0101,3)", "left_rotate(0b11101,3)"]}
{"task_id": "MbppEval/800", "prompt": "import re\ndef remove_all_spaces(text):\n    '''\n    Write a function to remove all whitespaces from a string.\n    '''\n", "entry_point": "remove_all_spaces", "tests": ["remove_all_spaces('python  program')", "remove_all_spaces('python   programming    language')", "remove_all_spaces('python                     program')", "remove_all_spaces('   python                     program')"]}
{"task_id": "MbppEval/801", "prompt": "def test_three_equal(x,y,z):\n    '''\n    Write a python function to count the number of equal numbers from three given integers.\n    '''\n", "entry_point": "test_three_equal", "tests": ["test_three_equal(1,1,1)", "test_three_equal(-1,-2,-3)", "test_three_equal(1,2,2)"]}
{"task_id": "MbppEval/802", "prompt": "def count_rotation(arr):   \n    '''\n    Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    '''\n", "entry_point": "count_rotation", "tests": ["count_rotation([3,2,1])", "count_rotation([4,5,1,2,3])", "count_rotation([7,8,9,1,2,3])", "count_rotation([1,2,3])", "count_rotation([1,3,2])"]}
{"task_id": "MbppEval/803", "prompt": "def is_perfect_square(n) :\n    '''\n    Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n    '''\n", "entry_point": "is_perfect_square", "tests": ["not is_perfect_square(10)", "is_perfect_square(36)", "not is_perfect_square(14)", "is_perfect_square(14*14)", "not is_perfect_square(125)", "is_perfect_square(125*125)"]}
{"task_id": "MbppEval/804", "prompt": "def is_product_even(arr): \n    '''\n    Write a function to check whether the product of numbers in a list is even or not.\n    '''\n", "entry_point": "is_product_even", "tests": ["is_product_even([1,2,3])", "is_product_even([1,2,1,4])", "not is_product_even([1,1])"]}
{"task_id": "MbppEval/805", "prompt": "def max_sum_list(lists):\n    '''\n    Write a function that returns the list in a list of lists whose sum of elements is the highest.\n    '''\n", "entry_point": "max_sum_list", "tests": ["max_sum_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])", "max_sum_list([[3,2,1], [6,5,4], [12,11,10]])", "max_sum_list([[2,3,1]])"]}
{"task_id": "MbppEval/806", "prompt": "def max_run_uppercase(test_str):\n    '''\n    Write a function to find maximum run of uppercase characters in the given string.\n    '''\n", "entry_point": "max_run_uppercase", "tests": ["max_run_uppercase('GeMKSForGERksISBESt')", "max_run_uppercase('PrECIOusMOVemENTSYT')", "max_run_uppercase('GooGLEFluTTER')"]}
{"task_id": "MbppEval/807", "prompt": "def first_odd(nums):\n    '''\n    Write a python function to find the first odd number in a given list of numbers.\n    '''\n", "entry_point": "first_odd", "tests": ["first_odd([1,3,5])", "first_odd([2,4,1,3])", "first_odd ([8,9,1])"]}
{"task_id": "MbppEval/808", "prompt": "def check_K(test_tup, K):\n    '''\n    Write a function to check if the given tuples contain the k or not.\n    '''\n", "entry_point": "check_K", "tests": ["check_K((10, 4, 5, 6, 8), 6)", "check_K((1, 2, 3, 4, 5, 6), 7)", "check_K((7, 8, 9, 44, 11, 12), 11)"]}
{"task_id": "MbppEval/809", "prompt": "def check_smaller(test_tup1, test_tup2):\n    '''\n    Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.\n    '''\n", "entry_point": "check_smaller", "tests": ["check_smaller((1, 2, 3), (2, 3, 4))", "check_smaller((4, 5, 6), (3, 4, 5))", "check_smaller((11, 12, 13), (10, 11, 12))"]}
